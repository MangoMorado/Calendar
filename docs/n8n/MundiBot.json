{
  "name": "Mundo Animal CalendarAPI",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message_text }}",
        "options": {
          "systemMessage": "=# Rol\nAsistente virtual de Mundo Animal con personalidad amigable, emp√°tica y profesional. Funciones principales:\n- Informaci√≥n sobre servicios y precios en cl√≠nica y domicilio\n- Educaci√≥n b√°sica sobre cuidado de mascotas\n- Gesti√≥n de consultas sobre certificados de viaje\n- Derivaci√≥n adecuada a humanos cuando sea necesario\n- Sistema de agenda (Agenda de citas, domicilios, agendamiento), puedes crear, editar y eliminar citas\n\n Encargado de optimizar la interacci√≥n entre los clientes y la cl√≠nica veterinaria Mundo Animal mediante el uso integral de las herramientas como:\n- `AGENDAR TURNO`: Para Agendar Turnos o citas\n\nTu funci√≥n es clave para facilitar un servicio excepcional en:\n\n- La gesti√≥n y consulta de citas veterinarias.  \n- La provisi√≥n de informaci√≥n detallada del negocio.\n\n**Fecha y hora actual:** `{{ $now.setZone('America/Bogota').format('yyyy-MM-dd HH:mm:ss') }}`\nEl d√≠a de la semana es: `{{ $now.setZone('America/Bogota').weekdayLong }}`\n\n## ‚ö† *REGLAS ESTRICTAS*\n- ‚ùå NO ofrecer promociones/descuentos\n- ‚ùå NO recomendar medicamentos espec√≠ficos\n- ‚ùå NO dar horarios sin antes consultarlos con la tool \"AGENDAR TURNO\"\n- ‚úÖ Usar emojis relevantes\n- ‚úÖ Mantener respuestas breves (1-3 frases)\n- ‚úÖ Siempre responde en espa√±ol\n- ‚úÖ Siempre especificar que los precios son en COP\n- ‚úÖ Solo atendemos Perros y Gatos\n- ‚úÖ Direcci√≥n de Mundo Animal (latitud y longitud): 9.306346138108434, -75.3898501288357\n- ‚úÖ Pregunta todo lo que se necesita antes de agendar\n- ‚úÖ Todas las fechas deben ir formateadas ('yyyy-MM-dd HH:mm:ss)\n- ‚úÖ Todas las consultas a AGENDAR TURNO deben incluir SIEMPRE estos dos par√°metros:\n   - **start_time**: Fecha y hora de inicio de la consulta\n     * Si el usuario no especifica una fecha, debes asignar una fecha coherente seg√∫n el contexto\n     * Ejemplo: Si piden \"cita para ma√±ana\", usa la fecha de ma√±ana\n   - **end_time**: Fecha y hora de finalizaci√≥n de la consulta\n     * Si no conoces la duraci√≥n espec√≠fica, suma 1 d√≠a completo a la fecha de inicio\n     * Ejemplo: Si start_time es \"2025-04-14 00:00:00\", end_time ser√≠a \"2025-04-15 00:00:00\"\n\n## ‚ú® *INICIO DE CONVERSACI√ìN*\n\"¬°Hola! Soy MUNDI üêæ, tu asistente de Mundo Animal, en que te puedo ayudar:\n‚Ä¢ Servicios y precios\n‚Ä¢ Horarios\n‚Ä¢ Ubicaci√≥n\n‚Ä¢ Certificados de viaje\n‚Ä¢ Domicilios veterinarios\n‚Ä¢ Agenda de citas\"\n \n---\n\n# Instrucci√≥n\n\nUtiliza seg√∫n las necesidades de la conversaci√≥n las herramientas de AGENDAR de manera eficiente para ofrecer un servicio de alto nivel en:\n\n- La gesti√≥n de citas.\n\n## Debes:\n- Gestionar las citas con precisi√≥n y eficacia.\n- Usar la herramienta de AGENDAR de manera eficiente.\n- Proporcionar respuestas informativas basadas en los datos del negocio.\n\n---\n\n# üß≠ Pasos\n\n## üîπ Inicio\n\nSaluda al cliente con amabilidad, mostrando total disposici√≥n para asistir en sus necesidades relacionadas con la gesti√≥n de citas o consultas sobre el negocio.\n\nEvitta decir \"Hola\" o saludar nuevamente si en la conversaci√≥n ya lo has dicho otras veces.\n\n---\n\n## üîπ Identificaci√≥n del cliente:\n\nSi el usuario esta registrado ya sabes:\n- **id**: {{ $json.id }}\n- **Nombre del cliente**: {{ $json.name }}\n- **Documento del cliente**: {{ $json.documento }}\n- **Direcci√≥n del cliente**: {{ $json.direccion }}\n- **Email del cliente**: {{ $json.email }}\n- **Mascotas del cliente**: {{ $json.mascotas }}\n\nSaludalo de forma cordial, y muestrale los datos \"excepto el id\", pregunta si esos siguen siendo los datos, de responder no:\n- Pregunta que campo cambio y ejecuta Registrar Usuario para actualizar el usuario\n\nSi no te llego esta informaci√≥n y usuarioRegistrado: {{ $json.usuarioRegistrado }}\n\nEntonces solicita de manera cort√©s los siguientes campos y usa la Tool de Registrar Usuario para registrarlo\n- nombre:\n- documento:\n- direccion:\n- email:\n- mascotas:\n\nlos campos que debes enviar a la base de datos son:\n- telefono: {{ $json.from }}\n- nombre: nombre del cliente\n- documento: numero de documento\n- direccion: direcci√≥n del cliente\n- email: correo electronico\n- fecha_registro: {{ $now.setZone('America/Bogota')}}\n- ultima_actividad: {{ $now.setZone('America/Bogota')}}\n- mascotas: informaci√≥n de las mascotas del cliente\n- notas: informaci√≥n importante de la consulta\n- estado: asigna un estado segun la conversaci√≥n\n\nSi el usuario no te responde algun campo, insiste en el numero de documento y nombre, los otros campos solicitalos cuando sea domicilios, visitas.\n\n---\n\n## üîπ Acci√≥n a realizar\n\nAtiende las necesidades espec√≠ficas del cliente, que pueden incluir:\n\n- **agendamiento de citas** mediante `AGENDAR TURNO`.\n\n## üîπ Formato de Agenda\n\nCuando crees o edites una cita en el calendario debes crear un json para el subflujo `AGENDAR TURNO`, debe tener los siguientes campos:\n\n- **title**: El titulo debe tener la siguiente formula \"Servicio | Nombre del due√±o (Nombre de la mascota)\"\n- **description**: Informaci√≥n del cliente, la mascota y el servicio, incluye datos del cliente que tienes de la conversaci√≥n\n- **start_time**: La hora de la cita (ejemplo de formato de hora: 2025-04-13 10:00:00)\n- **end_time**: La hora de finalizaci√≥n de la cita (ejemplo de formato de hora: 2025-04-13 11:00:00)\n- **calendar_type**: Hay 3 tipos de calendario, general, veterinario, estetico\n- **all_day**: Si la cita es un dia entero, este campo por defecto sera: false\n- **user_id**: El id del cliente, este campo por defecto sera: 10 \"usuario Mundibot\"\n- **id**:El id de la cita creada, este campo por defecto es null\n\ny debe ir en un formato JSON al subworkflow `AGENDAR TURNO`:\n\n{\n    \"title\": \"**title**\",\n    \"description\": \"**description**\",\n    \"start_time\": \"**start_time**\",\n    \"end_time\": \"**end_time**\",\n    \"calendar_type\": \"**calendar_type**\",\n    \"all_day\": **all_day**,\n    \"user_id\": 10,\n    \"id\": null\n}\n\nTipo de campos del JSON \"ENVIAR LOS DATOS COMPLETOS SI TE FALTA ALGO PREG√öNTALO AL CLIENTE\":\n\n{\n    \"title\": \"a string\",\n    \"description\": \"a string\",\n    \"start_time\": \"yyyy-MM-dd HH:mm:ss\",\n    \"end_time\": \"yyyy-MM-dd HH:mm:ss\",\n    \"calendar_type\": \"a string\",\n    \"all_day\": false,\n    \"user_id\": 10\n    \"id\": \"number\"\n}\n---\n\n## üîπ Confirmaci√≥n y asistencia adicional\n\nConfirma con el cliente la acci√≥n realizada y **ofrece asistencia adicional si es necesario**, garantizando una experiencia positiva y satisfactoria.\n\n---\n\n# üîÑ Flujo de Interacci√≥n con AgenteCalendario\n\n## Proceso para consultar disponibilidad y agendar citas\n\n1. **Consulta de disponibilidad:**\n   - Cuando el cliente solicite agendar una cita, primero debes recopilar la siguiente informaci√≥n:\n     * Tipo de servicio requerido\n     * Fecha preferida (yyyy-MM-dd)\n     * Si aplica, preferencia horaria (ma√±ana/tarde)\n     * Tipo de mascota (perro o gato)\n     * Nombre de la mascota\n     * Nombre del propietario\n     * N√∫mero de documento del cliente\n\n2. **Env√≠o de datos a AgenteCalendario:**\n   - Una vez tengas la informaci√≥n necesaria, env√≠a una solicitud al subworkflow `AGENDAR TURNO` con los siguientes par√°metros:\n     * Tipo de calendario: `veterinario`, `estetico` o `general` seg√∫n el servicio\n     * Fecha de consulta: en formato yyyy-MM-dd\n   - `AGENDAR TURNO` utiliza internamente la herramienta \"Consultar Disponibilidad\" para obtener los horarios disponibles.\n\n3. **Procesamiento de respuesta:**\n   - El AgenteCalendario consultar√° la disponibilidad y te devolver√° un listado de horarios disponibles.\n   - Presenta estos horarios al cliente en formato hora:minutos (ejemplo: \"08:00 a 09:00\").\n   - Si no hay disponibilidad en la fecha solicitada, AgenteCalendario te sugerir√° el siguiente d√≠a disponible.\n\n4. **Confirmaci√≥n y creaci√≥n de cita:**\n   - Cuando el cliente elija un horario, completa el JSON para crear la cita con:\n     ```json\n     {\n         \"title\": \"Servicio | Nombre del due√±o (Nombre de la mascota)\",\n         \"description\": \"Informaci√≥n completa del cliente y servicio\",\n         \"start_time\": \"yyyy-MM-dd HH:mm:ss\",\n         \"end_time\": \"yyyy-MM-dd HH:mm:ss\",\n         \"calendar_type\": \"tipo_calendario\",\n         \"all_day\": false,\n         \"user_id\": 10\n     }\n     ```\n   - Env√≠a este JSON a `AGENDAR TURNO` para finalizar la creaci√≥n de la cita.\n\n5. **Modificaci√≥n o cancelaci√≥n de citas:**\n   - Para modificar una cita existente, primero solicita el n√∫mero de documento del cliente.\n   - Utiliza `AGENDAR TURNO` para consultar las citas existentes de ese cliente.\n   - Una vez identificada la cita a modificar, sigue el mismo flujo que para crear una nueva cita pero actualizando el JSON de la cita existente.\n   - Para cancelaciones, solicita confirmaci√≥n al cliente antes de proceder.\n\n### Flujo detallado para modificaci√≥n de citas:\n\n1. **Identificaci√≥n de la cita a modificar:**\n   - Solicita al cliente el n√∫mero de documento o alg√∫n dato identificativo (nombre de mascota).\n   - Env√≠a estos datos a `AGENDAR TURNO` con la operaci√≥n \"Consulta de Agenda\" para recibir las citas activas del cliente.\n   - Presenta al cliente las citas encontradas y pide que confirme cu√°l desea modificar.\n\n2. **Datos necesarios para la modificaci√≥n:**\n   - Cuando el cliente seleccione la cita a modificar, obt√©n el `id` de la cita.\n   - Pregunta al cliente qu√© aspecto desea modificar:\n     * Fecha y hora\n     * Tipo de servicio\n     * Informaci√≥n adicional\n   - Si desea cambiar la fecha/hora, sigue el flujo de consulta de disponibilidad ya descrito.\n\n3. **Preparaci√≥n del JSON para actualizar:**\n   - Incluye TODOS los campos requeridos en el JSON:\n   ```json\n   {\n       \"id\": \"id_de_la_cita\",\n       \"title\": \"Servicio | Nombre del due√±o (Nombre de la mascota)\",\n       \"description\": \"Informaci√≥n completa del cliente y servicio\",\n       \"start_time\": \"yyyy-MM-dd HH:mm:ss\",\n       \"end_time\": \"yyyy-MM-dd HH:mm:ss\",\n       \"calendar_type\": \"tipo_calendario\",\n       \"all_day\": false,\n       \"user_id\": 10\n   }\n   ```\n   - Mant√©n sin cambios los campos que no se modifican.\n   - Actualiza los campos necesarios seg√∫n lo solicitado por el cliente.\n\n4. **Confirmaci√≥n de cambios:**\n   - Antes de proceder, confirma con el cliente los cambios a realizar.\n   - Env√≠a el JSON a `AGENDAR TURNO` con la operaci√≥n \"Actualizar Cita\".\n   - Informa al cliente el resultado de la actualizaci√≥n.\n\n### Flujo detallado para eliminaci√≥n/cancelaci√≥n de citas:\n\n1. **Identificaci√≥n de la cita a cancelar:**\n   - Solicita al cliente el n√∫mero de documento o alg√∫n dato identificativo (nombre de mascota).\n   - Env√≠a estos datos a `AGENDAR TURNO` con la operaci√≥n \"Consulta de Agenda\" para recibir las citas activas del cliente.\n   - Presenta al cliente las citas encontradas y pide que confirme cu√°l desea cancelar.\n\n2. **Confirmaci√≥n de cancelaci√≥n:**\n   - Una vez identificada la cita, muestra al cliente todos los detalles de la cita a cancelar.\n   - Solicita confirmaci√≥n expl√≠cita al cliente para proceder con la cancelaci√≥n.\n   - Puedes explicar brevemente la pol√≠tica de cancelaciones si corresponde.\n\n3. **Proceso de cancelaci√≥n:**\n   - Despu√©s de recibir la confirmaci√≥n, env√≠a el ID de la cita a `AGENDAR TURNO` con la operaci√≥n \"Eliminar Cita\":\n   ```json\n   {\n       \"id\": \"id_de_la_cita\"\n   }\n   ```\n   - Confirma al cliente que la cancelaci√≥n se ha realizado exitosamente.\n   - Opcionalmente, ofrece reagendar la cita para otra fecha si el cliente lo desea.\n\n---\n\n# üéØ Objetivo Final\n\nMejorar significativamente la **comunicaci√≥n y gesti√≥n de citas veterinarias**, aprovechando al m√°ximo las herramientas AGENDAR, para proporcionar un proceso de atenci√≥n al cliente **fluido, informativo y eficiente** de inicio a fin.\n\n---\n\n# ‚ùó Limitaciones\n\nEste agente se enfoca √∫nicamente en el uso efectivo de AGENDAR para:\n\n- Atender las necesidades de gesti√≥n de citas.\n- Responder consultas informativas de los clientes.\n\nSiempre manteniendo una atenci√≥n detallada en **las preferencias del cliente** y la **informaci√≥n espec√≠fica del negocio**.\n\n## üè• *TARIFAS EN CL√çNICA (2025)*\n\n### üíâ Vacunaci√≥n\n- Vanguard Plus 5: $45.000 COP\n- Vanguard Plus 5 L4: $50.000 COP\n- Bronchine CAe: $50.000 COP\n- Felocell FeLV (gatos): $65.000 COP\n\n### ü©∫ Procedimientos M√©dicos\n- Consulta general: $60.000 COP\n- Hemograma: $40.000 COP\n- Ecograf√≠a: $90.000 COP\n- Ozonoterapia: $40.000-$45.000 COP\n\n### üè• Hospitalizaci√≥n\n- Simple/d√≠a: $120.000 COP\n- Completa/d√≠a: $220.000 COP (incluye medicamentos)\n\n### üêæ Cirug√≠as\n- Castraci√≥n gato: $120.000 COP\n- OVH felina: $160.000 COP\n- OVH canina: $270.000-$350.000 COP (seg√∫n tama√±o)\n- Drenaje otohematoma: $200.000-$270.000 COP\n\n### üß™ An√°lisis Cl√≠nicos\n- Hemograma + Qu√≠mica sangu√≠nea: $140.000 COP\n- Coprol√≥gico: $20.000 COP\n- Citolog√≠a: $70.000-$180.000 COP\n\n## üè† *SERVICIOS A DOMICILIO (Mundo Animal en Casa 2025)*\n\n### üíâ Vacunaci√≥n\n- Vanguard Plus 5: $50.000 COP\n- Bronchine CAe: $55.000 COP\n- Felocell FeLV (gatos): $70.000 COP\n\n### ü©∫ Procedimientos M√©dicos\n- Consulta general: $70.000 COP\n- Hemograma: $45.000 COP\n- Ecograf√≠a: $120.000 COP\n\n### üè• Hospitalizaci√≥n\n- Domiciliaria/d√≠a: $100.000 COP (incluye 2 visitas + medicamentos)\n\n### üêæ Cirug√≠as\n- Castraci√≥n gato: $150.000 COP\n- OVH felina: $190.000 COP\n- OVH canina: $350.000-$450.000 COP (seg√∫n tama√±o)\n\n### ‚úÇ Cuidados B√°sicos\n- Corte de u√±as: $15.000-$30.000 COP\n- Desinfecci√≥n de o√≠dos: $15.000-$55.000 COP\n- Desparasitaci√≥n: $10.000-$20.000 COP\n\n## üìç *UBICACI√ìN Y CONTACTO*\n- Direcci√≥n cl√≠nica: Calle 19 #26-25\n- Horario general: 8AM-6PM\n- Horario vacunaci√≥n: 8AM-12PM / 2PM-5PM\n- Domicilios: Lunes a S√°bado 7AM-5PM\n- Emergencias 24h: 3013710366\n- WhatsApp citas: +57 320568913"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -1060,
        -120
      ],
      "id": "8d34e7a0-aff6-440a-b4d4-4d98654568b8",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -1160,
        80
      ],
      "id": "39f11993-6efd-4172-b37f-457963de8b90",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "6oB8WaRLlio9tDTl",
          "name": "PostgresPortainer"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1300,
        60
      ],
      "id": "0b09037e-1c14-4884-b045-8a2bf0725489",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "lXYqrNQbtsJxj5Dt",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "calendar",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3260,
        180
      ],
      "id": "cce0582b-8721-4dec-a991-9dea5368fb28",
      "name": "Webhook",
      "webhookId": "ab2a876d-cd30-418b-b912-27e30b119e7f"
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "clinica",
          "mode": "list",
          "cachedResultName": "clinica"
        },
        "options": {
          "queryName": "match_clinica"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        -1260,
        360
      ],
      "id": "907f0e9f-e2af-4ba3-bb30-0cfba280427e",
      "name": "Supabase Vector Store1",
      "credentials": {
        "supabaseApi": {
          "id": "63PRPBK90yD5PgIk",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1260,
        500
      ],
      "id": "3d6ebcec-6a9d-4110-a873-7d2cbfdb5af9",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "lXYqrNQbtsJxj5Dt",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -980,
        360
      ],
      "id": "14d73a2c-21c7-48a5-9b61-7426fb51336c",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "lXYqrNQbtsJxj5Dt",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "name": "Base_de_datos",
        "description": "Usa esta herramienta para acceder a toda la informaci√≥n de la cl√≠nica como horarios precios y preguntas frecuentes"
      },
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        -1180,
        220
      ],
      "id": "f2d814bb-f5d3-4895-907e-232f4c7b0488",
      "name": "Vector store tool"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.server_url }}/message/sendText/{{ $('Webhook').item.json.body.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid }}"
            },
            {
              "name": "text",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -700,
        -120
      ],
      "id": "6ff624df-2a4f-4f49-9296-f8047dd5148d",
      "name": "Respuesta"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.data.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "082de8ea-d004-4da5-bdc8-6e670afa16ba"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0662a5d9-1f5b-4079-b302-60209fa1e8b0",
                    "leftValue": "={{ $json.body.data.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f7903fc0-dc6d-4243-b4f9-07967d7d84dc",
                    "leftValue": "={{ $json.body.data.messageType }}",
                    "rightValue": "stickerMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Sticker"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2f61b8da-8de2-463e-9d6b-58c04ab26991",
                    "leftValue": "={{ $json.body.data.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c08ea041-7aec-4763-b409-95eb0b737afb",
                    "leftValue": "={{ $json.body.data.messageType }}",
                    "rightValue": "documentMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Document"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d705951e-57e9-466b-b805-15157186f4cf",
                    "leftValue": "={{ $json.body.data.messageType }}",
                    "rightValue": "locationMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Location"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2880,
        100
      ],
      "id": "a6baeefe-3872-4964-8f5a-80a8d79df402",
      "name": "Switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0a3ce474-4e50-4fd9-842b-0b47607df7dc",
              "name": "text",
              "value": "={{ $json.body.data.message.conversation }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2440,
        -240
      ],
      "id": "156dd31d-6484-4b19-be07-6ee6b2104043",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -2260,
        60
      ],
      "id": "93585296-9219-4388-ab7a-43b500fefe60",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "lXYqrNQbtsJxj5Dt",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.server_url }}/chat/getBase64FromMediaMessage/{{ $('Webhook').item.json.body.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $json.body.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $json.body.data.key.id }}"
            },
            {
              "name": "ConvertToMp4",
              "value": "={{Boolean(false)}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2600,
        -100
      ],
      "id": "33920811-3899-4712-b363-1a3f4845f903",
      "name": "DescargaImg"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "=El usuario dijo esto:  {{ $('DescargaImg').item.json.caption }}\nSobre esta imagen.\n\nSi no dijo nada descr√≠bela, si ves texto, transcr√≠bela, ser√° importante para pr√≥ximas consultas",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -2260,
        -100
      ],
      "id": "55c49134-0612-4e61-b34d-0b35f81c686d",
      "name": "OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "lXYqrNQbtsJxj5Dt",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -2260,
        220
      ],
      "id": "d4a74f80-85ac-4dd2-9fa5-fefd36c14721",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0d9e4f94-e617-45b1-8e34-02c95f913545",
              "name": "message_type",
              "value": "={{ $('Switch').item.json.body.data.messageType }}",
              "type": "string"
            },
            {
              "id": "a1c7e7c5-b962-4404-a9b9-a4aee3c4914b",
              "name": "message_text",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "845996f4-4143-4c53-8384-7464cbc65bef",
              "name": "from",
              "value": "={{ $('Switch').item.json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "fcc5b0c8-b03f-482d-ba39-6254dbe55370",
              "name": "name",
              "value": "={{ $('Switch').item.json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "ca08bfb8-ccb1-42e2-a69d-cfd51222f361",
              "name": "documento",
              "value": "={{ $('ValidarUsuario').item.json[0].documento }}",
              "type": "string"
            },
            {
              "id": "2bb7f6a9-cee5-417d-9519-a5db75b49188",
              "name": "direcci√≥n",
              "value": "=direccion\": \"={{ $('ValidarUsuario').item.json[0].direccion }}",
              "type": "string"
            },
            {
              "id": "087355b4-161e-4085-ae91-f3a0a2817f9e",
              "name": "email",
              "value": "={{ $('ValidarUsuario').item.json[0].email }}",
              "type": "string"
            },
            {
              "id": "17aeb219-1e58-40b9-bbe0-d12c7deffa75",
              "name": "mascotas",
              "value": "={{ $('ValidarUsuario').item.json[0].mascotas }}",
              "type": "string"
            },
            {
              "id": "3853b80a-03be-44e4-a061-8928c27c2f63",
              "name": "usuarioRegistrado",
              "value": "={{ $json.usuarioRegistrado }}",
              "type": "string"
            },
            {
              "id": "55f058c6-61bf-45e7-bf1e-ffa2e81e9fc4",
              "name": "id",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1280,
        -120
      ],
      "id": "fab2cd03-c57b-469f-bb0d-e2934fc9cde5",
      "name": "Fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6e5545af-d69b-432d-8a0f-56c063c6a08d",
              "name": "text",
              "value": "={{ $json.text }} | {{ $json.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1920,
        40
      ],
      "id": "58cfc300-1fc0-4121-a24e-166186520818",
      "name": "Txt"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2880,
        360
      ],
      "id": "91cf49f1-c3c8-43b5-96aa-2f66b16c824e",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8f054b88-a87b-489c-9a2e-7b5bf69807bd",
              "leftValue": "={{ $json.body.data.key.fromMe }}",
              "rightValue": "={{ $json.body.sender }}",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3080,
        180
      ],
      "id": "8033203a-51c3-4dc9-8684-80b8306c8111",
      "name": "Evitar Responder a si mismo"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2440,
        -100
      ],
      "id": "471ca1d5-c473-4f7d-a774-7de68d303f7e",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2440,
        60
      ],
      "id": "294584e1-10f5-402a-8b2e-a9144355eb64",
      "name": "Convert to File1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.server_url }}/chat/getBase64FromMediaMessage/{{ $('Webhook').item.json.body.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $json.body.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $json.body.data.key.id }}"
            },
            {
              "name": "ConvertToMp4",
              "value": "={{Boolean(false)}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2600,
        60
      ],
      "id": "ff4bad50-f2c2-4110-acdf-ca5347164ede",
      "name": "DescargaAudio"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.server_url }}/chat/getBase64FromMediaMessage/{{ $('Webhook').item.json.body.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $json.body.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $json.body.data.key.id }}"
            },
            {
              "name": "ConvertToMp4",
              "value": "={{Boolean(false)}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2600,
        220
      ],
      "id": "5fffa9bc-c131-4769-8343-7942527317d0",
      "name": "DescargaDocumento"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2440,
        220
      ],
      "id": "a8a485e0-1a2f-4431-bd03-a2436c1ebd14",
      "name": "Convert to File2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7d9b7bef-a57e-44e6-8e90-37a08bdddff1",
              "name": "text",
              "value": "=La direcci√≥n que te envio es\n\nLatitud: {{ $json.body.data.message.locationMessage.degreesLatitude }}\n\nLongitud:{{ $json.body.data.message.locationMessage.degreesLongitude }}\n\nNombre: {{ $json.body.data.message.locationMessage.name }}\n\nDirecci√≥n: {{ $json.body.data.message.locationMessage.address }}\n\nContext-Info: {{ $json.body.data.contextInfo }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2440,
        380
      ],
      "id": "681080c7-83da-47f4-9af9-ec0058e6eca0",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "content": "# Recibir Mensaje",
        "height": 340,
        "width": 360,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3300,
        60
      ],
      "id": "1cddf529-c97e-46d4-8b81-ddc1862e5dff",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Interpretar diferentes tipos de mensaje",
        "height": 860,
        "width": 1140,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2940,
        -320
      ],
      "id": "1c0741a0-57d1-4a48-b75a-cfe2acbd1248",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Informaci√≥n del Usuario",
        "height": 420,
        "width": 500,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1800,
        -180
      ],
      "id": "6d0bce8d-3881-4760-a0f5-c7fc4b9871f1",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## RAG",
        "height": 440,
        "width": 440,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1300,
        200
      ],
      "id": "7ed0c416-040b-4850-8c57-394936e879ba",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Operaciones con el calendario",
        "height": 220,
        "width": 280,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -860,
        80
      ],
      "id": "e168e354-9d17-4a9b-9680-c654480f1020",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## Bot",
        "height": 380,
        "width": 720,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1300,
        -180
      ],
      "id": "b799dadf-ca91-4e99-b101-4f25a9ea49f8",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "name": "AGENDAR_TURNO",
        "description": "Usa esta tool para agendar turnos o citas",
        "workflowId": {
          "__rl": true,
          "value": "6v9fzhgoqS2LPa8y",
          "mode": "list",
          "cachedResultName": "Mundibot | Agendar"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        -700,
        160
      ],
      "id": "e5f99ac3-2216-49ad-8be5-2e57e4cdf52d",
      "name": "AGENDAR TURNO"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT * FROM usuarios WHERE telefono = '{{ $('Webhook').item.json.body.data.key.remoteJid.split('@')[0] }}' LIMIT 1;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1780,
        -100
      ],
      "id": "ebd932b0-4476-4dad-bbc8-cfee2c76ffc4",
      "name": "ValidarUsuario",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "6oB8WaRLlio9tDTl",
          "name": "PostgresPortainer"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "df6c824a-320c-4bbc-aeb5-555d44047359",
              "leftValue": "={{ $json.length > 0 }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1640,
        -100
      ],
      "id": "4552bba8-c94b-4df6-8e37-ceec2430433d",
      "name": "UsuarioExiste"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a89d21fe-2d10-4f7b-a439-c2d068646a47",
              "name": "usuarioRegistrado",
              "value": false,
              "type": "boolean"
            },
            {
              "id": "8bd0a377-1c7d-4cfc-bcc0-d1f8166449b8",
              "name": "text",
              "value": "={{ $('Txt').item.json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1460,
        -20
      ],
      "id": "ebc90bf6-e1d5-4959-8f80-035b4752bfed",
      "name": "UsuarioNoRegistrado"
    },
    {
      "parameters": {
        "content": "## BD Usuarios",
        "height": 220,
        "width": 280,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -860,
        300
      ],
      "id": "c672f457-1761-4bb5-8733-8a371a04765a",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "usuarios",
          "mode": "list",
          "cachedResultName": "usuarios"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('id', ``, 'number') }}",
            "telefono": "={{ $('Switch').item.json.body.data.key.remoteJid }}",
            "nombre": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('nombre', ``, 'string') }}",
            "documento": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('documento', ``, 'string') }}",
            "direccion": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('direccion', ``, 'string') }}",
            "email": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('email', ``, 'string') }}",
            "fecha_registro": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fecha_registro', ``, 'string') }}",
            "ultima_actividad": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('ultima_actividad', ``, 'string') }}",
            "mascotas": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('mascotas', `ingresa aca la informaci√≥n de la mascota del usuario, en caso de no tener informaci√≥n por defecto: '[]'::jsonb, aca la respuesta es un json, agrega informaci√≥n como: nombre, raza, especie, edad, etc, todo esto sacalo de la conversaci√≥n con el cliente`, 'string') }}",
            "notas": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notas', ``, 'string') }}",
            "estado": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('estado', ``, 'string') }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "telefono",
              "displayName": "telefono",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "nombre",
              "displayName": "nombre",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "documento",
              "displayName": "documento",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "direccion",
              "displayName": "direccion",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "fecha_registro",
              "displayName": "fecha_registro",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "ultima_actividad",
              "displayName": "ultima_actividad",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "mascotas",
              "displayName": "mascotas",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "notas",
              "displayName": "notas",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "estado",
              "displayName": "estado",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        -780,
        380
      ],
      "id": "2337e733-1f9d-4301-bf78-1412a6790d24",
      "name": "Registrar Usuario",
      "credentials": {
        "postgres": {
          "id": "6oB8WaRLlio9tDTl",
          "name": "PostgresPortainer"
        }
      }
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "connection": "keep-alive",
            "host": "n8n.mangomorado.com",
            "x-forwarded-scheme": "https",
            "x-forwarded-proto": "https",
            "x-forwarded-for": "172.17.0.1",
            "x-real-ip": "172.17.0.1",
            "content-length": "888",
            "content-type": "application/json",
            "user-agent": "axios/1.7.9",
            "accept-encoding": "gzip, compress, deflate, br"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "messages.upsert",
            "instance": "Parrot",
            "data": {
              "key": {
                "remoteJid": "573217058135@s.whatsapp.net",
                "fromMe": false,
                "id": "A81B761745B636D035E228ABABE72DDD"
              },
              "pushName": "Sergio Veloza",
              "status": "DELIVERY_ACK",
              "message": {
                "conversation": "Hola",
                "messageContextInfo": {
                  "deviceListMetadata": {
                    "senderKeyHash": "G8mpZt47p4OIUA==",
                    "senderTimestamp": "1744041508",
                    "recipientKeyHash": "ll/I4SSEYmwr6w==",
                    "recipientTimestamp": "1742968216"
                  },
                  "deviceListMetadataVersion": 2,
                  "messageSecret": "n3omBOikG8aTnti87SFXLEzdgVH5hDBGvr2ehaShp94="
                }
              },
              "messageType": "conversation",
              "messageTimestamp": 1744210706,
              "instanceId": "20cca9ac-30d4-4cd0-8428-55b6bd540fcd",
              "source": "android"
            },
            "destination": "https://n8n.mangomorado.com/webhook/calendar",
            "date_time": "2025-04-09T11:58:27.150Z",
            "sender": "573135629228@s.whatsapp.net",
            "server_url": "https://evolution.mangomorado.com",
            "apikey": "01E69C6AAD29-4041-BC9C-B93E31B5146F"
          },
          "webhookUrl": "https://n8n.mangomorado.com/webhook/calendar",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Evitar Responder a si mismo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respuesta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store1": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector store tool",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Vector store tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Vector store tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "DescargaImg",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "DescargaImg",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "DescargaAudio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "DescargaDocumento",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Txt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Txt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DescargaImg": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Txt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Txt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Txt": {
      "main": [
        [
          {
            "node": "ValidarUsuario",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evitar Responder a si mismo": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DescargaAudio": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DescargaDocumento": {
      "main": [
        [
          {
            "node": "Convert to File2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File2": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Txt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AGENDAR TURNO": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "ValidarUsuario": {
      "main": [
        [
          {
            "node": "UsuarioExiste",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UsuarioExiste": {
      "main": [
        [
          {
            "node": "Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "UsuarioNoRegistrado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UsuarioNoRegistrado": {
      "main": [
        [
          {
            "node": "Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Registrar Usuario": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "bba6870f-c465-490e-9e9d-be01774b64df",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "492216dba7ead6f870ef4169d10664ed44bcfc662cf5e8e4907018d95ca96a66"
  },
  "id": "c7YfsyCLRr2sTXLw",
  "tags": [
    {
      "createdAt": "2025-04-08T03:26:20.505Z",
      "updatedAt": "2025-04-08T03:26:20.505Z",
      "id": "6DZhrxpTyzDPm6sI",
      "name": "Agenda"
    },
    {
      "createdAt": "2025-03-25T21:31:30.282Z",
      "updatedAt": "2025-03-25T21:31:30.282Z",
      "id": "Nx7TdHXx7BAlOiRv",
      "name": "EvolutionAPI"
    }
  ]
}