{
  "name": "Mundo Animal CalendarAPI",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "=El usuario dice: {{ $json.message_text }}\nEl numero es: {{ $json.from }}\nEl nombre \"registrado como PushName en WahtsApp\"es: {{ $json.name }}\n\n**Fecha y hora actual:** `{{ $now.setZone('America/Bogota').format('yyyy-MM-dd HH:mm:ss') }}`\nEl d√≠a de la semana es: `{{ $now.setZone('America/Bogota').weekdayLong }}`",
        "options": {
          "systemMessage": "=# Rol\nAsistente virtual de Mundo Animal con personalidad amigable, emp√°tica y profesional. Funciones principales:\n- Informaci√≥n sobre servicios y precios en cl√≠nica y domicilio\n- Educaci√≥n b√°sica sobre cuidado de mascotas\n- Gesti√≥n de consultas sobre certificados de viaje\n- Derivaci√≥n adecuada a humanos cuando sea necesario\n- Sistema de agenda (Agenda de citas, domicilios, agendamiento), puedes crear, editar y eliminar citas\n\n Encargado de optimizar la interacci√≥n entre los clientes y la cl√≠nica veterinaria Mundo Animal mediante el uso integral de las herramientas como:\n- `AGENDAR TURNO`: Para Agendar Turnos o citas\n\nTu funci√≥n es clave para facilitar un servicio excepcional en:\n\n- La gesti√≥n y consulta de citas veterinarias.  \n- La provisi√≥n de informaci√≥n detallada del negocio.\n\n## ‚ö† *REGLAS ESTRICTAS*\n- ‚ùå NO ofrecer promociones/descuentos\n- ‚ùå NO recomendar medicamentos espec√≠ficos\n- ‚ùå NO dar horarios sin antes consultarlos con la tool \"AGENDAR TURNO\"\n- ‚úÖ Usar emojis relevantes\n- ‚úÖ Mantener respuestas breves (1-3 frases)\n- ‚úÖ Siempre responde en espa√±ol\n- ‚úÖ Siempre especificar que los precios son en COP\n- ‚úÖ Solo atendemos Perros y Gatos\n- ‚úÖ Direcci√≥n de Mundo Animal (latitud y longitud): 9.306346138108434, -75.3898501288357\n- ‚úÖ Pregunta todo lo que se necesita antes de agendar\n- ‚úÖ Todas las fechas deben ir formateadas ('yyyy-MM-dd HH:mm:ss)\n- ‚úÖ Todas las consultas a AGENDAR TURNO deben incluir SIEMPRE estos dos par√°metros:\n   - **start_time**: Fecha y hora de inicio de la consulta\n     * Si el usuario no especifica una fecha, debes asignar una fecha coherente seg√∫n el contexto\n     * Ejemplo: Si piden \"cita para ma√±ana\", usa la fecha de ma√±ana\n   - **end_time**: Fecha y hora de finalizaci√≥n de la consulta\n     * Si no conoces la duraci√≥n espec√≠fica, suma 1 d√≠a completo a la fecha de inicio\n     * Ejemplo: Si start_time es \"2025-04-14 00:00:00\", end_time ser√≠a \"2025-04-15 00:00:00\"\n- ‚úÖ Cuando recibas un mensaje que inicie con \"EL CONTENIDO DE LA IMAGEN ES:\", interpreta el contenido descrito como si fuera una imagen enviada por el usuario y responde adecuadamente seg√∫n el contexto:\n   - Si muestra una mascota con s√≠ntomas: sugiere agendar una cita veterinaria\n   - Si muestra un documento o carnet de vacunaci√≥n: ayuda a interpretarlo y sugiere vacunas faltantes\n   - Si muestra una factura o recibo: valida la informaci√≥n y responde consultas relacionadas\n   - Si es una ubicaci√≥n o direcci√≥n: ofrece informaci√≥n sobre c√≥mo llegar a la cl√≠nica desde all√≠\n   - Si es una foto de medicamentos: explica informaci√≥n general sin recetar dosis espec√≠ficas\n\n## ‚ú® *INICIO DE CONVERSACI√ìN*\n\"¬°Hola! Soy MUNDI üêæ, tu asistente de Mundo Animal, en que te puedo ayudar:\n‚Ä¢ Servicios y precios\n‚Ä¢ Horarios\n‚Ä¢ Ubicaci√≥n\n‚Ä¢ Certificados de viaje\n‚Ä¢ Domicilios veterinarios\n‚Ä¢ Agenda de citas\"\n \n---\n\n# Instrucci√≥n\n\nUtiliza seg√∫n las necesidades de la conversaci√≥n las herramientas de AGENDAR de manera eficiente para ofrecer un servicio de alto nivel en:\n\n- La gesti√≥n de citas.\n\n## Debes:\n- Gestionar las citas con precisi√≥n y eficacia.\n- Usar la herramienta de AGENDAR de manera eficiente.\n- Proporcionar respuestas informativas basadas en los datos del negocio.\n\n---\n\n# üß≠ Pasos\n\n## üîπ Inicio\n\nSaluda al cliente con amabilidad, mostrando total disposici√≥n para asistir en sus necesidades relacionadas con la gesti√≥n de citas o consultas sobre el negocio.\n\nEvitta decir \"Hola\" o saludar nuevamente si en la conversaci√≥n ya lo has dicho otras veces.\n\n---\n\n## üîπ Identificaci√≥n del cliente:\n\nCuando recibas un mensaje de un usuario:\n1. Usa la herramienta ConsultarBD para verificar si el usuario existe en la base de datos.\n2. Si el usuario no existe (respuesta vac√≠a):\n   - Pres√©ntate y explica que necesitas algunos datos para registrarlo.\n   - Solicita al usuario su nombre, documento y direcci√≥n.\n   - Una vez obtenidos los datos, usa la herramienta Registrar Usuario para guardarlos.\n3. Si el usuario ya existe:\n   - Utiliza sus datos para personalizar la conversaci√≥n.\n   - Si el usuario indica que alg√∫n dato ha cambiado, actualiza usando Registrar Usuario.\n\nA lo largo de la conversaci√≥n agrega informaci√≥n clave de sus mascotas y notas relevantes, si el usuario se niega o ignora la solicitud de los datos continua la conversaci√≥n de manera natural hasta que sea necesario (para un domicilio o para agendar una cita)\n\nLos campos disponibles para almacenar informaci√≥n en la base de datos son:\n- telefono: {{ $json.from }}\n- nombre: nombre del cliente\n- documento: numero de documento\n- direccion: direcci√≥n del cliente\n- email: correo electronico\n- fecha_registro: {{ $now.setZone('America/Bogota')}}\n- ultima_actividad: {{ $now.setZone('America/Bogota')}}\n- mascotas: informaci√≥n de las mascotas del cliente estructurada como un array JSON. Ejemplo:\n \n  ```json\n  [\n    {\n      \"nombre\": \"Max\", \n      \"especie\": \"perro\",\n      \"raza\": \"Golden Retriever\",\n      \"edad\": \"3 a√±os\",\n      \"sexo\": \"macho\",\n      \"caracter√≠sticas\": \"manchas blancas en el pecho\",\n      \"historial\": \"vacunado en marzo 2025\"\n    }\n  ]\n  ```\n- notas: informaci√≥n importante de la consulta\n- estado: asigna uno de estos valores seg√∫n la interacci√≥n:\n  * \"activo\": Usuario que interact√∫a regularmente\n  * \"nuevo\": Usuario reci√©n registrado\n  * \"pendiente\": Usuario con informaci√≥n incompleta\n  * \"interesado\": Usuario que ha consultado servicios espec√≠ficos\n  * \"agendado\": Usuario con cita programada\n  * \"ausente\": Sin interacci√≥n en m√°s de 3 meses\n  * \"VIP\": Cliente frecuente o con casos especiales\n\nSi el usuario no te responde alg√∫n campo, insiste en el numero de documento y nombre, los otros campos solic√≠talos cuando sea domicilios, visitas, agendas o citas.\n\n### Valores predeterminados para campos incompletos:\nCuando el usuario no proporciona ciertos datos, usa estos valores por defecto:\n- nombre: \"[Nombre de WhatsApp]\" (usando el PushName si est√° disponible)\n- documento: \"Pendiente\" (prioridad alta para completar)\n- direccion: \"No proporcionada\"\n- email: \"No proporcionado\"\n- mascotas: [] (array vac√≠o)\n- notas: \"Usuario registrado mediante WhatsApp el {{ $now.setZone('America/Bogota').format('yyyy-MM-dd') }}\"\n- estado: \"pendiente\"\n\n### Gesti√≥n de informaci√≥n parcial de mascotas:\nCuando el usuario menciona informaci√≥n incompleta sobre sus mascotas:\n1. Crea un objeto con los datos disponibles, dejando los campos faltantes con valores como \"No especificado\"\n2. Para campos cr√≠ticos como especie, asume \"perro\" o \"gato\" seg√∫n el contexto de la conversaci√≥n\n3. Estructura m√≠nima a mantener:\n```json\n{\n  \"nombre\": \"[Nombre mencionado o 'Mascota no identificada']\",\n  \"especie\": \"[perro/gato o 'No especificado']\",\n  \"edad\": \"[Edad mencionada o 'No especificada']\"\n}\n4. Actualiza el registro progresivamente cuando el usuario proporcione m√°s informaci√≥n\n5. Confirma los datos parciales con el usuario: \"Entiendo que tienes un [especie] llamado [nombre]. ¬øHay algo m√°s que quieras contarme sobre √©l/ella?\"\n\n## üîπ Acci√≥n a realizar\nAtiende las necesidades espec√≠ficas del cliente, que pueden incluir:\n\n- Agendamiento de citas: Utiliza la herramienta AGENDAR TURNO para gestionar citas veterinarias y est√©ticas.\n- Consulta de servicios y precios: Proporciona informaci√≥n detallada sobre los servicios ofrecidos y sus tarifas.\n- Solicitud de informaci√≥n: Responde consultas sobre horarios, ubicaci√≥n, procedimientos y cuidados de mascotas.\n- Domicilios veterinarios: Gestiona solicitudes de atenci√≥n veterinaria a domicilio.\n- Certificados de viaje: Informa sobre el proceso para obtener certificados de viaje para mascotas.\n- Registro en base de datos de MundoAnimal\n\n* Para cada interacci√≥n:\n\n- Identifica claramente la necesidad principal del cliente\n- Recopila toda la informaci√≥n necesaria para atender su solicitud\n- Utiliza las herramientas correspondientes para dar respuesta\n- Confirma con el cliente si su necesidad fue atendida satisfactoriamente\n- Ofrece informaci√≥n adicional relevante seg√∫n el contexto\n\n- En el caso de agendamiento de citas, aseg√∫rate de recopilar:\n\n- Tipo de servicio requerido (consulta general, vacunaci√≥n, est√©tica, etc.)\n- Datos de la mascota (nombre, especie, raza, edad)\n- Preferencia de fecha y hora\n- Actualiza el estado del cliente a \"agendado\" una vez confirmada la cita\n\n## üîπ Actualizaci√≥n de informaci√≥n del cliente:\nCuando detectes que un usuario existente necesita actualizar sus datos:\n\nUsa la herramienta Registrar Usuario para actualizar la informaci√≥n en la base de datos.\nEste proceso de actualizaci√≥n puede ser iniciado por:\n\nSolicitud expl√≠cita del cliente para cambiar sus datos\nDetecci√≥n de informaci√≥n nueva o contradictoria en la conversaci√≥n\nNecesidad de completar datos faltantes para un servicio espec√≠fico\n\nLos campos que se pueden actualizar son:\n\nnombre: nombre completo actualizado del cliente\ndocumento: n√∫mero de documento corregido o actualizado\ndireccion: nueva direcci√≥n del cliente\nemail: correo electr√≥nico actualizado\nultima_actividad: {{ $now.setZone('America/Bogota')}} (se actualiza autom√°ticamente)\nmascotas: informaci√≥n actualizada de las mascotas como array JSON, manteniendo el formato:\njson[\n  {\n    \"nombre\": \"Max\", \n    \"especie\": \"perro\",\n    \"raza\": \"Golden Retriever\",\n    \"edad\": \"3 a√±os\",\n    \"sexo\": \"macho\",\n    \"caracter√≠sticas\": \"manchas blancas en el pecho\",\n    \"historial\": \"vacunado en marzo 2025\"\n  }\n]\n\nnotas: informaci√≥n relevante adicional o actualizada\nestado: actualiza seg√∫n la situaci√≥n actual del cliente (activo, interesado, agendado, etc.)\n\nInstrucciones para la actualizaci√≥n:\n\nConfirma con el usuario la informaci√≥n que desea actualizar\nConserva los datos anteriores que no requieren cambios\nPara el campo \"mascotas\", incorpora la nueva informaci√≥n sin sobrescribir datos previos valiosos\nDespu√©s de actualizar, confirma verbalmente al usuario los cambios realizados\nActualiza el campo \"ultima_actividad\" con la fecha y hora actual\n\nEjemplo de respuesta despu√©s de actualizar: \"He actualizado tus datos, [nombre]. Tu direcci√≥n ha sido cambiada a [nueva direcci√≥n] y hemos registrado la informaci√≥n de tu nueva mascota, [nombre mascota]. ¬øHay algo m√°s que necesites modificar?\"\n\n## üîπ Formato de Agenda\n\nCuando crees o edites una cita en el calendario debes crear un json para el subflujo `AGENDAR TURNO`, debe tener los siguientes campos:\n\n- **title**: El titulo debe tener la siguiente formula \"Servicio | Nombre del due√±o (Nombre de la mascota)\"\n- **description**: Informaci√≥n del cliente, la mascota y el servicio, incluye datos del cliente que tienes de la conversaci√≥n\n- **start_time**: La hora de la cita (ejemplo de formato de hora: 2025-04-13 10:00:00)\n- **end_time**: La hora de finalizaci√≥n de la cita (ejemplo de formato de hora: 2025-04-13 11:00:00)\n- **calendar_type**: Hay 3 tipos de calendario, general, veterinario, estetico\n- **all_day**: Si la cita es un dia entero, este campo por defecto sera: false\n- **user_id**: El id del cliente, este campo por defecto sera: 10 \"usuario Mundibot\"\n- **id**:El id de la cita creada, este campo por defecto es null\n\ny debe ir en un formato JSON al subworkflow `AGENDAR TURNO`:\n\n{\n    \"title\": \"**title**\",\n    \"description\": \"**description**\",\n    \"start_time\": \"**start_time**\",\n    \"end_time\": \"**end_time**\",\n    \"calendar_type\": \"**calendar_type**\",\n    \"all_day\": **all_day**,\n    \"user_id\": 10,\n    \"id\": null\n}\n\nTipo de campos del JSON \"ENVIAR LOS DATOS COMPLETOS SI TE FALTA ALGO PREG√öNTALO AL CLIENTE\":\n\n{\n    \"title\": \"a string\",\n    \"description\": \"a string\",\n    \"start_time\": \"yyyy-MM-dd HH:mm:ss\",\n    \"end_time\": \"yyyy-MM-dd HH:mm:ss\",\n    \"calendar_type\": \"a string\",\n    \"all_day\": false,\n    \"user_id\": 10\n    \"id\": \"number\"\n}\n---\n\n## üîπ Confirmaci√≥n y asistencia adicional\n\nConfirma con el cliente la acci√≥n realizada y **ofrece asistencia adicional si es necesario**, garantizando una experiencia positiva y satisfactoria.\n\n---\n\n# üîÑ Flujo de Interacci√≥n con AgenteCalendario\n\n## Proceso para consultar disponibilidad y agendar citas\n\n1. **Consulta de disponibilidad:**\n   - Cuando el cliente solicite agendar una cita, primero debes recopilar la siguiente informaci√≥n:\n     * Tipo de servicio requerido\n     * Fecha preferida (yyyy-MM-dd)\n     * Si aplica, preferencia horaria (ma√±ana/tarde)\n     * Tipo de mascota (perro o gato)\n     * Nombre de la mascota\n     * Nombre del propietario\n     * N√∫mero de documento del cliente\n\n2. **Env√≠o de datos a AgenteCalendario:**\n   - Una vez tengas la informaci√≥n necesaria, env√≠a una solicitud al subworkflow `AGENDAR TURNO` con los siguientes par√°metros:\n     * Tipo de calendario: `veterinario`, `estetico` o `general` seg√∫n el servicio\n     * Fecha de consulta: en formato yyyy-MM-dd\n   - `AGENDAR TURNO` utiliza internamente la herramienta \"Consultar Disponibilidad\" para obtener los horarios disponibles.\n\n3. **Procesamiento de respuesta:**\n   - El AgenteCalendario consultar√° la disponibilidad y te devolver√° un listado de horarios disponibles.\n   - Presenta estos horarios al cliente en formato hora:minutos (ejemplo: \"08:00 a 09:00\").\n   - Si no hay disponibilidad en la fecha solicitada, AgenteCalendario te sugerir√° el siguiente d√≠a disponible.\n\n4. **Confirmaci√≥n y creaci√≥n de cita:**\n   - Cuando el cliente elija un horario, completa el JSON para crear la cita con:\n     ```json\n     {\n         \"title\": \"Servicio | Nombre del due√±o (Nombre de la mascota)\",\n         \"description\": \"Informaci√≥n completa del cliente y servicio\",\n         \"start_time\": \"yyyy-MM-dd HH:mm:ss\",\n         \"end_time\": \"yyyy-MM-dd HH:mm:ss\",\n         \"calendar_type\": \"tipo_calendario\",\n         \"all_day\": false,\n         \"user_id\": 10\n     }\n     ```\n   - Env√≠a este JSON a `AGENDAR TURNO` para finalizar la creaci√≥n de la cita.\n\n5. **Modificaci√≥n o cancelaci√≥n de citas:**\n   - Para modificar una cita existente, primero solicita el n√∫mero de documento del cliente.\n   - Utiliza `AGENDAR TURNO` para consultar las citas existentes de ese cliente.\n   - Una vez identificada la cita a modificar, sigue el mismo flujo que para crear una nueva cita pero actualizando el JSON de la cita existente.\n   - Para cancelaciones, solicita confirmaci√≥n al cliente antes de proceder.\n\n### Flujo detallado para modificaci√≥n de citas:\n\n1. **Identificaci√≥n de la cita a modificar:**\n   - Solicita al cliente el n√∫mero de documento o alg√∫n dato identificativo (nombre de mascota).\n   - Env√≠a estos datos a `AGENDAR TURNO` con la operaci√≥n \"Consulta de Agenda\" para recibir las citas activas del cliente.\n   - Presenta al cliente las citas encontradas y pide que confirme cu√°l desea modificar.\n\n2. **Datos necesarios para la modificaci√≥n:**\n   - Cuando el cliente seleccione la cita a modificar, obt√©n el `id` de la cita.\n   - Pregunta al cliente qu√© aspecto desea modificar:\n     * Fecha y hora\n     * Tipo de servicio\n     * Informaci√≥n adicional\n   - Si desea cambiar la fecha/hora, sigue el flujo de consulta de disponibilidad ya descrito.\n\n3. **Preparaci√≥n del JSON para actualizar:**\n   - Incluye TODOS los campos requeridos en el JSON:\n   ```json\n   {\n       \"id\": \"id_de_la_cita\",\n       \"title\": \"Servicio | Nombre del due√±o (Nombre de la mascota)\",\n       \"description\": \"Informaci√≥n completa del cliente y servicio\",\n       \"start_time\": \"yyyy-MM-dd HH:mm:ss\",\n       \"end_time\": \"yyyy-MM-dd HH:mm:ss\",\n       \"calendar_type\": \"tipo_calendario\",\n       \"all_day\": false,\n       \"user_id\": 10\n   }\n   ```\n   - Mant√©n sin cambios los campos que no se modifican.\n   - Actualiza los campos necesarios seg√∫n lo solicitado por el cliente.\n\n4. **Confirmaci√≥n de cambios:**\n   - Antes de proceder, confirma con el cliente los cambios a realizar.\n   - Env√≠a el JSON a `AGENDAR TURNO` con la operaci√≥n \"Actualizar Cita\".\n   - Informa al cliente el resultado de la actualizaci√≥n.\n\n### Flujo detallado para eliminaci√≥n/cancelaci√≥n de citas:\n\n1. **Identificaci√≥n de la cita a cancelar:**\n   - Solicita al cliente el n√∫mero de documento o alg√∫n dato identificativo (nombre de mascota).\n   - Env√≠a estos datos a `AGENDAR TURNO` con la operaci√≥n \"Consulta de Agenda\" para recibir las citas activas del cliente.\n   - Presenta al cliente las citas encontradas y pide que confirme cu√°l desea cancelar.\n\n2. **Confirmaci√≥n de cancelaci√≥n:**\n   - Una vez identificada la cita, muestra al cliente todos los detalles de la cita a cancelar.\n   - Solicita confirmaci√≥n expl√≠cita al cliente para proceder con la cancelaci√≥n.\n   - Puedes explicar brevemente la pol√≠tica de cancelaciones si corresponde.\n\n3. **Proceso de cancelaci√≥n:**\n   - Despu√©s de recibir la confirmaci√≥n, env√≠a el ID de la cita a `AGENDAR TURNO` con la operaci√≥n \"Eliminar Cita\":\n   ```json\n   {\n       \"id\": \"id_de_la_cita\"\n   }\n   ```\n   - Confirma al cliente que la cancelaci√≥n se ha realizado exitosamente.\n   - Opcionalmente, ofrece reagendar la cita para otra fecha si el cliente lo desea.\n\n---\n\n# üéØ Objetivo Final\n\nMejorar significativamente la **comunicaci√≥n y gesti√≥n de citas veterinarias**, aprovechando al m√°ximo las herramientas AGENDAR, para proporcionar un proceso de atenci√≥n al cliente **fluido, informativo y eficiente** de inicio a fin.\n\n---\n\n# ‚ùó Limitaciones\n\nEste agente se enfoca √∫nicamente en el uso efectivo de AGENDAR para:\n\n- Atender las necesidades de gesti√≥n de citas.\n- Responder consultas informativas de los clientes.\n\nSiempre manteniendo una atenci√≥n detallada en **las preferencias del cliente** y la **informaci√≥n espec√≠fica del negocio**.\n\n## üè• *TARIFAS EN CL√çNICA (2025)*\n\n### üíâ Vacunaci√≥n\n- Vanguard Plus 5: $45.000 COP\n- Vanguard Plus 5 L4: $50.000 COP\n- Vanguard Plus 5 L4 - CV: $60.000 COP\n- Bronchine CAe: $50.000 COP\n- Defensor 1: $30.000 COP\n- Felocell FeLV (gatos): $65.000 COP\n- Felocell 3: $65.000 COP\n\n### üíâ Esquema de Vacunaci√≥n para Perros\n1. Primera dosis: Vanguard Plus 5\n   - *Protege contra: Distemper (moquillo), Hepatitis, Parainfluenza y Parvovirus. Estas son enfermedades muy contagiosas que pueden ser mortales para tu mascota.*\n   \n2. A los 15 d√≠as: Vanguard Plus 5 L4\n   - *Refuerza la protecci√≥n anterior y a√±ade cobertura contra Leptospirosis, una enfermedad bacteriana que afecta a ri√±ones e h√≠gado y puede transmitirse a humanos.*\n   \n3. A los 15 d√≠as: Vanguard Plus 5 L4 - CV\n   - *Contin√∫a el refuerzo anterior y a√±ade protecci√≥n contra Coronavirus canino, que causa problemas digestivos severos especialmente en cachorros.*\n   \n4. A los 15 d√≠as: Bronchine CAe y Defensor 1\n   - *Bronchine \"Bordetella\": Protege contra la tos de las perreras, una enfermedad respiratoria muy contagiosa en lugares con muchos perros.*\n   - *Defensor: Es la vacuna antirr√°bica que protege contra la rabia, enfermedad mortal que afecta al sistema nervioso y puede transmitirse a humanos. Obligatoria por ley.*\n   \n5. Refuerzo anual: (Vanguard Plus 5 L4 - CV, Bronchine CAe y Defensor 1)\n   - *Mantiene activa la protecci√≥n de todas las vacunas anteriores. Es fundamental para la salud de tu mascota a largo plazo.*\n\n### üíâ Esquema de Vacunaci√≥n para Gatos\n1. Primera dosis: Felocell\n   - *Protege contra la leucemia viral, Panleucopenia felina (tambi√©n llamada \"moquillo de los gatos\"), una enfermedad muy contagiosa que afecta el sistema digestivo y puede ser mortal, especialmente en gatitos.*\n   \n2. A los 15 d√≠as: Felocell 3\n   - *Protecci√≥n contra Herpesvirus, Ampl√≠a la protecci√≥n contra Panleucopenia felina y Calicivirus, dos infecciones respiratorias comunes en gatos que causan s√≠ntomas similares a un resfriado severo, con secreci√≥n nasal, estornudos y √∫lceras en la boca.*\n   \n3. A los 15 d√≠as: Defensor 1\n   - *Es la vacuna antirr√°bica que protege contra la rabia, enfermedad mortal que afecta al sistema nervioso y puede transmitirse a humanos. Obligatoria por ley para gatos con acceso al exterior.*\n\n4. Refuerzo anual\n   - *Mantiene activa la protecci√≥n de todas las vacunas anteriores. Fundamental para mantener a tu gato sano y protegido.*\n\n### ü™± Desparasitaci√≥n y Control de Par√°sitos\n- Desparasitaci√≥n b√°sica cachorros: $7.000 COP\n- Desparasitaci√≥n b√°sica adultos: $15.000 COP\n- Dosis garrapaticida spray razas peque√±as: $18.000 COP\n- Dosis garrapaticida spray razas medianas: $25.000 COP\n- Dosis garrapaticida spray razas grandes: $30.000 COP\n\n### üê∂ Guarder√≠a\n- Guarder√≠a razas peque√±as (el propietario aporta la alimentaci√≥n): $60.000 COP\n- Guarder√≠a razas medianas (el propietario aporta la alimentaci√≥n): $70.000 COP\n- Guarder√≠a razas grandes (el propietario aporta la alimentaci√≥n): $80.000 COP\n\n### ü©∫ Procedimientos M√©dicos\n- Consulta general: $60.000 COP\n- Ecograf√≠a: $90.000 COP\n\n### üè• Hospitalizaci√≥n\n- Hospitalizaci√≥n simple (valor por d√≠a solo del servicio sin medicamentos): $120.000 COP\n- Hospitalizaci√≥n completa (valor por d√≠a incluyendo servicios y medicamentos): $220.000 COP\n\n### üêæ Cirug√≠as\n- Orquiectom√≠a (castraci√≥n) gato (HG-CX-Tratamiento): $120.000 COP\n- OVH felina (HG-CX-Tratamiento): $160.000 COP\n- OVH razas peque√±as canina: $270.000 COP\n- OVH razas medianas canina: $350.000 COP\n- OVH razas grandes canina: Seg√∫n peso\n- Orquiectom√≠a (castraci√≥n) razas peque√±as canino: $170.000 COP\n- Orquiectom√≠a (castraci√≥n) razas medianas canino: $230.000 COP\n- Orquiectom√≠a (castraci√≥n) razas grandes canino: Seg√∫n peso\n- Drenaje otohematoma razas peque√±as (unilateral): $200.000 COP\n- Drenaje otohematoma razas medianas (unilateral): $230.000 COP\n- Drenaje otohematoma razas grandes (unilateral): $270.000 COP\n\n### ü¶∑ Odontolog√≠a\n- Profilaxis dental razas peque√±as: $180.000 COP\n- Profilaxis dental razas medianas: $230.000 COP\n- Profilaxis dental razas grandes: $270.000 COP\n\n### üß™ An√°lisis Cl√≠nicos\n- Hemograma + Qu√≠mica sangu√≠nea: $140.000 COP\n- Hemograma: $40.000 COP\n- Parcial de orina (con sondeo sin sedaci√≥n): $45.000 COP\n- Parcial de orina (sin sondeo - traen la muestra): $20.000 COP\n- Coprol√≥gico: $20.000 COP\n- KOH - Raspado de piel - Citolog√≠a - Tricograma: $90.000 COP\n- Citolog√≠a: $70.000 COP\n- Citolog√≠a - Cultivo y antibiograma (muestra de o√≠dos o de alguna otra secreci√≥n): $150.000 COP\n- Ecograf√≠a: $90.000 COP\n\n### üíâ Tratamientos\n- Ozonoterapia para todas las razas y tama√±os (sin servicio de est√©tica): $45.000 COP\n- Ozonoterapia a partir de la segunda sesi√≥n (no incluye est√©tica): $40.000 COP\n\n### ‚ö±Ô∏è Cremaci√≥n\n- Cremaci√≥n colectiva razas peque√±as (sin devolver cenizas, solo certificado): $250.000 COP\n\n### üßº Ba√±o y Est√©tica\n- BA√ëOS RAZAS PEQUE√ëAS PELO CORTO (Pinscher, Beagle < 6 MESES): $38.000 COP\n- BA√ëOS RAZAS MEDIANAS PELO CORTO (Beagle): $50.000 COP\n- BA√ëO BLOWER RAZAS PEQUE√ëAS - MEDIANAS PELO LARGO (Yorki, French Poodle, Schnauzer, Shih tzu, Maltes): $44.000-$55.000 COP\n- BA√ëOS RAZAS GRANDES PELO CORTO (Labrador, Golden, Siberiano de poco pelo): $66.000-$72.000 COP\n- BA√ëOS RAZAS GRANDES PELO MEDIO (Labrador, Golden, Siberiano): $77.000-$94.000 COP\n- BA√ëOS RAZAS GRANDES PELO LARGO (Siberiano, Chow Chow): $99.000-$120.000 COP\n- BA√ëOS GATOS: $66.000 COP\n- PELUQUERIA ESTANDAR RAZAS MEDIANAS (French Poodle, Schnauzer, Coker): $44.000-$55.000 COP\n- PELUQUERIAS RAZAS GRANDES PELO LARGO (Siberiano, Chow Chow): $110.000 COP (PUEDE VARIAR)\n\n## üè† *SERVICIOS A DOMICILIO (Mundo Animal en Casa 2025)*\n\n### üíâ Vacunaci√≥n\n- Vanguard Plus 5: $50.000 COP\n- Bronchine CAe: $55.000 COP\n- Felocell FeLV (gatos): $70.000 COP\n\n### ü©∫ Procedimientos M√©dicos\n- Consulta general: $70.000 COP\n- Hemograma: $45.000 COP\n- Ecograf√≠a: $120.000 COP\n\n### üè• Hospitalizaci√≥n\n- Domiciliaria/d√≠a: $100.000 COP (incluye 2 visitas + medicamentos)\n\n### üêæ Cirug√≠as\n- Castraci√≥n gato: $150.000 COP\n- OVH felina: $190.000 COP\n- OVH canina: $350.000-$450.000 COP (seg√∫n tama√±o)\n\n### ‚úÇ Cuidados B√°sicos\n- Corte de u√±as: $15.000-$30.000 COP\n- Desinfecci√≥n de o√≠dos: $15.000-$55.000 COP\n- Desparasitaci√≥n: $10.000-$20.000 COP\n\n### üßº Ba√±o y Est√©tica a Domicilio\n- BA√ëOS RAZAS PEQUE√ëAS PELO CORTO: $38.000 COP + $30.000 ADICIONALES CON HIDRATACION Y RELAJACION CAPILAR √í AROMATERAPIA U OZONOTERAPIA \n- BA√ëOS RAZAS MEDIANAS PELO CORTO: $50.000 COP + $30.000 ADICIONALES CON HIDRATACION Y RELAJACION CAPILAR √í AROMATERAPIA U OZONOTERAPIA \n- BA√ëO BLOWER RAZAS PEQUE√ëAS - MEDIANAS PELO LARGO: $44.000-$55.000 COP + $30.000 ADICIONALES CON HIDRATACION Y RELAJACION CAPILAR √í AROMATERAPIA U OZONOTERAPIA \n- BA√ëOS RAZAS GRANDES PELO CORTO: $66.000-$72.000 COP + $30.000 ADICIONALES CON HIDRATACION Y RELAJACION CAPILAR √í AROMATERAPIA U OZONOTERAPIA \n- BA√ëOS RAZAS GRANDES PELO MEDIO: $77.000-$94.000 COP + $30.000 ADICIONALES CON HIDRATACION Y RELAJACION CAPILAR √í AROMATERAPIA U OZONOTERAPIA \n- BA√ëOS RAZAS GRANDES PELO LARGO: $99.000-$120.000 COP + $30.000 ADICIONALES CON HIDRATACION Y RELAJACION CAPILAR √í AROMATERAPIA U OZONOTERAPIA \n- BA√ëOS GATOS: $66.000 COP + $30.000 ADICIONALES CON HIDRATACION Y RELAJACION CAPILAR √í AROMATERAPIA U OZONOTERAPIA \n- PELUQUERIA ESTANDAR RAZAS MEDIANAS: $44.000-$55.000 COP + $30.000 ADICIONALES CON HIDRATACION Y RELAJACION CAPILAR √í AROMATERAPIA U OZONOTERAPIA \n- PELUQUERIAS RAZAS GRANDES PELO LARGO: $110.000 COP + $30.000 ADICIONALES CON HIDRATACION Y RELAJACION CAPILAR √í AROMATERAPIA U OZONOTERAPIA  (PUEDE VARIAR)\n\n## ‚ùì *PREGUNTAS FRECUENTES*\n\n### üêæ Sobre Ba√±os y Est√©tica\n- **¬øCu√°nto tiempo toma el ba√±o?**\n  Eso depende de cuantas mascotas tenemos en lista de espera. Generalmente dura m√°s de una hora. Te escribimos o llamamos cuando est√© listo.\n\n## üìç *UBICACI√ìN Y CONTACTO*\n- Direcci√≥n cl√≠nica: Calle 19 #26-25\n- Horario general: 8AM-6PM\n- Horario vacunaci√≥n: 8AM-12PM / 2PM-5PM\n- Domicilios: Lunes a S√°bado 7AM-5PM\n- Emergencias 24h: 3013710366\n- WhatsApp citas: +57 320568913"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -800,
        -60
      ],
      "id": "8d34e7a0-aff6-440a-b4d4-4d98654568b8",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -680,
        120
      ],
      "id": "39f11993-6efd-4172-b37f-457963de8b90",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "6oB8WaRLlio9tDTl",
          "name": "PostgresPortainer"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "calendar",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3260,
        60
      ],
      "id": "cce0582b-8721-4dec-a991-9dea5368fb28",
      "name": "Webhook",
      "webhookId": "ab2a876d-cd30-418b-b912-27e30b119e7f"
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "clinica",
          "mode": "list",
          "cachedResultName": "clinica"
        },
        "options": {
          "queryName": "match_clinica"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        -800,
        400
      ],
      "id": "907f0e9f-e2af-4ba3-bb30-0cfba280427e",
      "name": "Supabase Vector Store1",
      "credentials": {
        "supabaseApi": {
          "id": "63PRPBK90yD5PgIk",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        -800,
        560
      ],
      "id": "3d6ebcec-6a9d-4110-a873-7d2cbfdb5af9",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "lXYqrNQbtsJxj5Dt",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -540,
        460
      ],
      "id": "14d73a2c-21c7-48a5-9b61-7426fb51336c",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "lXYqrNQbtsJxj5Dt",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "name": "Base_de_datos",
        "description": "Usa esta herramienta para acceder a toda la informaci√≥n de la cl√≠nica como horarios precios y preguntas frecuentes"
      },
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        -660,
        260
      ],
      "id": "f2d814bb-f5d3-4895-907e-232f4c7b0488",
      "name": "Vector store tool"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.server_url }}/message/sendText/{{ $('Webhook').item.json.body.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid }}"
            },
            {
              "name": "text",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -480,
        -60
      ],
      "id": "6ff624df-2a4f-4f49-9296-f8047dd5148d",
      "name": "Respuesta"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.content_Type }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "082de8ea-d004-4da5-bdc8-6e670afa16ba"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0662a5d9-1f5b-4079-b302-60209fa1e8b0",
                    "leftValue": "={{ $json.message.content_Type }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f7903fc0-dc6d-4243-b4f9-07967d7d84dc",
                    "leftValue": "={{ $json.message.content_Type }}",
                    "rightValue": "stickerMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Sticker"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2f61b8da-8de2-463e-9d6b-58c04ab26991",
                    "leftValue": "={{ $json.message.content_Type }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c08ea041-7aec-4763-b409-95eb0b737afb",
                    "leftValue": "=",
                    "rightValue": "documentMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Document"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d705951e-57e9-466b-b805-15157186f4cf",
                    "leftValue": "={{ $json.message.content_Type }}",
                    "rightValue": "locationMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Location"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "Otro"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2620,
        -80
      ],
      "id": "a6baeefe-3872-4964-8f5a-80a8d79df402",
      "name": "Switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7d6214bc-e917-475f-b7bc-76f12b75309c",
              "name": "message.chat_id",
              "value": "={{ $json.message.chat_id }}",
              "type": "string"
            },
            {
              "id": "0a3ce474-4e50-4fd9-842b-0b47607df7dc",
              "name": "content",
              "value": "={{ $json.message.content }}",
              "type": "string"
            },
            {
              "id": "a8cda8c7-82d2-4fce-abff-245034e7c8e7",
              "name": "timestamp",
              "value": "={{ $json.message.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2300,
        -300
      ],
      "id": "156dd31d-6484-4b19-be07-6ee6b2104043",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -2060,
        0
      ],
      "id": "93585296-9219-4388-ab7a-43b500fefe60",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "lXYqrNQbtsJxj5Dt",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Normalize').item.json.instance.server_url }}/chat/getBase64FromMediaMessage/{{ $('Normalize').item.json.instance.name }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Normalize').item.json.instance.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $json.message.message_id }}"
            },
            {
              "name": "ConvertToMp4",
              "value": "={{Boolean(false)}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2380,
        -160
      ],
      "id": "33920811-3899-4712-b363-1a3f4845f903",
      "name": "DescargaImg"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "=El usuario dijo esto:  {{ $('DescargaImg').item.json.caption }}\nSobre esta imagen.\n\nSi no dijo nada descr√≠bela, si ves texto, transcr√≠bela, ser√° importante para pr√≥ximas consultas,\n\ninicia diciendo \"EL CONTENIDO DE LA IMAGEN ES:\"",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -2060,
        -160
      ],
      "id": "55c49134-0612-4e61-b34d-0b35f81c686d",
      "name": "OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "lXYqrNQbtsJxj5Dt",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -2060,
        160
      ],
      "id": "d4a74f80-85ac-4dd2-9fa5-fefd36c14721",
      "name": "Extract from File"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2860,
        140
      ],
      "id": "91cf49f1-c3c8-43b5-96aa-2f66b16c824e",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2220,
        -160
      ],
      "id": "471ca1d5-c473-4f7d-a774-7de68d303f7e",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2220,
        0
      ],
      "id": "294584e1-10f5-402a-8b2e-a9144355eb64",
      "name": "Convert to File1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Normalize').item.json.instance.server_url }}/chat/getBase64FromMediaMessage/{{ $('Normalize').item.json.instance.name }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Normalize').item.json.instance.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $json.message.message_id }}"
            },
            {
              "name": "ConvertToMp4",
              "value": "={{Boolean(false)}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2380,
        0
      ],
      "id": "ff4bad50-f2c2-4110-acdf-ca5347164ede",
      "name": "DescargaAudio"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Normalize').item.json.instance.server_url }}/chat/getBase64FromMediaMessage/{{ $('Normalize').item.json.instance.name }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Normalize').item.json.instance.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $json.message_id }}"
            },
            {
              "name": "ConvertToMp4",
              "value": "={{Boolean(false)}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2380,
        160
      ],
      "id": "5fffa9bc-c131-4769-8343-7942527317d0",
      "name": "DescargaDocumento"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2220,
        160
      ],
      "id": "a8a485e0-1a2f-4431-bd03-a2436c1ebd14",
      "name": "Convert to File2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7d9b7bef-a57e-44e6-8e90-37a08bdddff1",
              "name": "content",
              "value": "=La direcci√≥n que te envio es\n\nLatitud: {{ $json.body.data.message.locationMessage.degreesLatitude }}\n\nLongitud:{{ $json.body.data.message.locationMessage.degreesLongitude }}\n\nNombre: {{ $json.body.data.message.locationMessage.name }}\n\nDirecci√≥n: {{ $json.body.data.message.locationMessage.address }}\n\nContext-Info: {{ $json.body.data.contextInfo }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2300,
        320
      ],
      "id": "681080c7-83da-47f4-9af9-ec0058e6eca0",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "content": "# Recibir Mensaje",
        "height": 520,
        "width": 640,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3320,
        -160
      ],
      "id": "1cddf529-c97e-46d4-8b81-ddc1862e5dff",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Interpretar diferentes tipos de mensaje",
        "height": 900,
        "width": 920,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2680,
        -360
      ],
      "id": "1c0741a0-57d1-4a48-b75a-cfe2acbd1248",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## RAG",
        "height": 440,
        "width": 440,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -840,
        260
      ],
      "id": "7ed0c416-040b-4850-8c57-394936e879ba",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Operaciones con el calendario",
        "height": 220,
        "width": 260,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -400,
        100
      ],
      "id": "e168e354-9d17-4a9b-9680-c654480f1020",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## Bot",
        "height": 380,
        "width": 820,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1000,
        -120
      ],
      "id": "b799dadf-ca91-4e99-b101-4f25a9ea49f8",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "name": "AGENDAR_TURNO",
        "description": "Usa esta tool para agendar turnos o citas",
        "workflowId": {
          "__rl": true,
          "value": "6v9fzhgoqS2LPa8y",
          "mode": "list",
          "cachedResultName": "Mundibot | Agendar"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        -320,
        200
      ],
      "id": "e5f99ac3-2216-49ad-8be5-2e57e4cdf52d",
      "name": "AGENDAR TURNO"
    },
    {
      "parameters": {
        "content": "## BD Usuarios",
        "height": 220,
        "width": 400,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -400,
        320
      ],
      "id": "c672f457-1761-4bb5-8733-8a371a04765a",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "usuarios",
          "mode": "list",
          "cachedResultName": "usuarios"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {
            "id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('id', ``, 'number') }}",
            "telefono": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('telefono', ``, 'string') }}",
            "nombre": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('nombre', ``, 'string') }}",
            "documento": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('documento', ``, 'string') }}",
            "direccion": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('direccion', ``, 'string') }}",
            "email": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('email', ``, 'string') }}",
            "fecha_registro": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fecha_registro', ``, 'string') }}",
            "ultima_actividad": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('ultima_actividad', ``, 'string') }}",
            "mascotas": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('mascotas', `ingresa aca la informaci√≥n de la mascota del usuario, en caso de no tener informaci√≥n por defecto: '[]'::jsonb, aca la respuesta es un json, agrega informaci√≥n como: nombre, raza, especie, edad, etc, todo esto sacalo de la conversaci√≥n con el cliente`, 'string') }}",
            "notas": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notas', ``, 'string') }}",
            "estado": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('estado', ``, 'string') }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "telefono",
              "displayName": "telefono",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "nombre",
              "displayName": "nombre",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "documento",
              "displayName": "documento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "direccion",
              "displayName": "direccion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "fecha_registro",
              "displayName": "fecha_registro",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "ultima_actividad",
              "displayName": "ultima_actividad",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "mascotas",
              "displayName": "mascotas",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "notas",
              "displayName": "notas",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "estado",
              "displayName": "estado",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        -260,
        400
      ],
      "id": "2337e733-1f9d-4301-bf78-1412a6790d24",
      "name": "Registrar Usuario",
      "credentials": {
        "postgres": {
          "id": "6oB8WaRLlio9tDTl",
          "name": "PostgresPortainer"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8f054b88-a87b-489c-9a2e-7b5bf69807bd",
              "leftValue": "={{ $json.body.data.key.fromMe }}",
              "rightValue": "={{ $json.body.sender }}",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3080,
        60
      ],
      "id": "8033203a-51c3-4dc9-8684-80b8306c8111",
      "name": "Banlist"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "deepseek-chat",
          "mode": "list",
          "cachedResultName": "deepseek-chat"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -800,
        120
      ],
      "id": "0b09037e-1c14-4884-b045-8a2bf0725489",
      "name": "IA Model",
      "credentials": {
        "openAiApi": {
          "id": "2fOZZaflY7S5n7tE",
          "name": "DeepSeek"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c12e5c6-39f3-47d0-a76d-1f4a09721097",
              "name": "instance.server_url",
              "value": "={{ $('Webhook').item.json.body.server_url }}",
              "type": "string"
            },
            {
              "id": "c3dd8ebb-a497-41a0-b4ba-8fe81bc86a19",
              "name": "instance.name",
              "value": "={{ $json.body.instance }}",
              "type": "string"
            },
            {
              "id": "a588e0d6-e0f1-460e-b95d-f47b8c010f53",
              "name": "instance.apikey",
              "value": "={{ $('Webhook').item.json.body.apikey }}",
              "type": "string"
            },
            {
              "id": "0911dc7a-b010-4739-a32f-175501a564cd",
              "name": "message.message_id",
              "value": "={{ $json.body.data.key.id }}",
              "type": "string"
            },
            {
              "id": "b82c178e-28b5-4baf-84ce-61c8e65e4ebd",
              "name": "message.chat_id",
              "value": "={{ $json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "958e97ce-3b9b-4584-9802-5c8c3bc2a728",
              "name": "message.content_Type",
              "value": "={{ $json.body.data.messageType }}",
              "type": "string"
            },
            {
              "id": "d0004926-731e-4eeb-9adc-b2f6521ac867",
              "name": "message.content",
              "value": "={{ $json.body.data.message.conversation }}",
              "type": "string"
            },
            {
              "id": "4ae42240-d806-4112-8318-3fca2859c0b5",
              "name": "message.timestamp",
              "value": "=  {{ $json.body.date_time.toDateTime() }}",
              "type": "string"
            },
            {
              "id": "d7ba3042-5768-4ab8-895f-7a703321798c",
              "name": "user.name",
              "value": "={{ $json.body.data.pushName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2860,
        -40
      ],
      "id": "9f3f701a-69c9-4962-877a-bed75c0501f5",
      "name": "Normalize"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.server_url }}/message/sendText/{{ $('Webhook').item.json.body.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid }}"
            },
            {
              "name": "text",
              "value": "Lo siento, no puedo comprender,  podr√≠as escribirlo?"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2480,
        380
      ],
      "id": "3196c51a-cc54-491a-be71-b785762758c9",
      "name": "Formato No Soportado"
    },
    {
      "parameters": {
        "content": "## Buffer de Mensajes",
        "height": 320,
        "width": 760,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1760,
        -120
      ],
      "id": "9dae6ff4-479d-49cf-aae5-0a372d432e57",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ed24825e-26fc-41e8-ab05-6fd17a62060a",
              "name": "content",
              "value": "={{ $json.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1920,
        -160
      ],
      "id": "e505a569-ca89-42fe-810a-ac9949b291f6",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0a3ce474-4e50-4fd9-842b-0b47607df7dc",
              "name": "content",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1920,
        0
      ],
      "id": "f647c638-0ee5-4763-a9d0-9fd5b06fe6ab",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0a3ce474-4e50-4fd9-842b-0b47607df7dc",
              "name": "content",
              "value": "={{ $json.content.conversation }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1920,
        160
      ],
      "id": "1df2eabd-d71b-428e-8b48-7a58c4b08865",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a1c7e7c5-b962-4404-a9b9-a4aee3c4914b",
              "name": "message_text",
              "value": "={{ $('Unir_Mensajes').item.json.mensajes }}",
              "type": "string"
            },
            {
              "id": "845996f4-4143-4c53-8384-7464cbc65bef",
              "name": "from",
              "value": "={{ $('Unir_Mensajes').item.json.message.chat_id.split('@')[0] }}",
              "type": "string"
            },
            {
              "id": "fcc5b0c8-b03f-482d-ba39-6254dbe55370",
              "name": "name",
              "value": "={{ $('Normalize').item.json.user.name }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -960,
        -60
      ],
      "id": "fab2cd03-c57b-469f-bb0d-e2934fc9cde5",
      "name": "Chat_Input"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Switch').item.json.message.chat_id }}",
        "messageData": "={{ $json.content }}{{ $('Webhook').item.json.body.data.message.imageMessage.caption }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1720,
        0
      ],
      "id": "405ae58b-35a7-4293-a6cc-e203ed92fd88",
      "name": "Guardar_Mensaje",
      "credentials": {
        "redis": {
          "id": "i4ZpaERVB1p6PKpH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1600,
        0
      ],
      "id": "2c5997c4-bbba-4748-984d-8c2cf3708686",
      "name": "Wait",
      "webhookId": "a12d9b72-12f0-4b9c-a3b3-218fb37e9892"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "=mensajes",
        "key": "={{ $('Switch').item.json.message.chat_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1480,
        0
      ],
      "id": "5de21a3a-90d1-4904-b3b0-dcdbf1ad590e",
      "name": "Recuperar_Mensajes",
      "credentials": {
        "redis": {
          "id": "i4ZpaERVB1p6PKpH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e064e716-ce2f-4b53-a07c-aaf68ac4892d",
              "leftValue": "={{ $json.mensajes.last() }}",
              "rightValue": "={{ $('Normalize').item.json.message.content }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1340,
        0
      ],
      "id": "617aa428-ec66-4932-bac8-31f1f0f6c34d",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1160,
        60
      ],
      "id": "5bf48de1-bc86-4129-907f-4599de36f5b1",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "47c72408-0108-486f-9b4e-3af71e182096",
              "name": "mensajes",
              "value": "={{ $json.mensajes.join('\\n') }}",
              "type": "string"
            },
            {
              "id": "f85bf6e7-ae2a-42ec-a7b7-46e601af39ef",
              "name": "message.chat_id",
              "value": "={{ $('Wait').item.json.message.chat_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1160,
        -100
      ],
      "id": "40535db4-435a-4fff-8d0a-8b00abbc4ad4",
      "name": "Unir_Mensajes"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $json.key.remoteJid }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -320,
        -60
      ],
      "id": "701b90e0-d9a9-4ef4-a15f-4eab601a7792",
      "name": "Limpiar_Buffer",
      "credentials": {
        "redis": {
          "id": "i4ZpaERVB1p6PKpH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "usuarios",
          "mode": "list",
          "cachedResultName": "usuarios"
        },
        "limit": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Limit', ``, 'number') }}",
        "where": {
          "values": [
            {
              "column": "telefono",
              "value": "={{ $('Unir_Mensajes').item.json.message.chat_id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        -380,
        400
      ],
      "id": "31057f94-408a-44c8-a862-8dbe12dc44e6",
      "name": "ConsultarBD",
      "credentials": {
        "postgres": {
          "id": "6oB8WaRLlio9tDTl",
          "name": "PostgresPortainer"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "usuarios",
          "mode": "list",
          "cachedResultName": "usuarios"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [
            "telefono"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "telefono",
              "displayName": "telefono",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "nombre",
              "displayName": "nombre",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "documento",
              "displayName": "documento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "direccion",
              "displayName": "direccion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "fecha_registro",
              "displayName": "fecha_registro",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "ultima_actividad",
              "displayName": "ultima_actividad",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "mascotas",
              "displayName": "mascotas",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "notas",
              "displayName": "notas",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "estado",
              "displayName": "estado",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        -120,
        400
      ],
      "id": "87eed0fa-e1da-47f5-a8e2-0b2589ec434e",
      "name": "Actualizar Usuario",
      "credentials": {
        "postgres": {
          "id": "6oB8WaRLlio9tDTl",
          "name": "PostgresPortainer"
        }
      }
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "connection": "keep-alive",
            "host": "n8n.mangomorado.com",
            "x-forwarded-scheme": "https",
            "x-forwarded-proto": "https",
            "x-forwarded-for": "172.17.0.1",
            "x-real-ip": "172.17.0.1",
            "content-length": "1095",
            "content-type": "application/json",
            "user-agent": "axios/1.7.9",
            "accept-encoding": "gzip, compress, deflate, br"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "messages.upsert",
            "instance": "Parrot",
            "data": {
              "key": {
                "remoteJid": "573217058135@s.whatsapp.net",
                "fromMe": false,
                "id": "1F44DFDA220FD9D78CA8E1E2B7E9F513"
              },
              "pushName": "Sergio Veloza",
              "status": "DELIVERY_ACK",
              "message": {
                "conversation": "1094276510\nCalle 27 # 12 B 13\nvelozasergio@gmail.com \n\nTengo 3 gatos, oreo, sol y J√∫piter todos son gatos mestizos sol tiene 7 a√±os, oreo tiene 3 y J√∫piter tiene 2 a√±os\n\nMe llamo Sergio Veloza Gonzalez",
                "messageContextInfo": {
                  "deviceListMetadata": {
                    "senderKeyHash": "G8mpZt47p4OIUA==",
                    "senderTimestamp": "1744041508",
                    "recipientKeyHash": "ll/I4SSEYmwr6w==",
                    "recipientTimestamp": "1744264853"
                  },
                  "deviceListMetadataVersion": 2,
                  "messageSecret": "fiwIbpZi1xh5C1XsxnVBRCvN/LvfU/evcnE+9vtGPjo="
                }
              },
              "messageType": "conversation",
              "messageTimestamp": 1744406103,
              "instanceId": "20cca9ac-30d4-4cd0-8428-55b6bd540fcd",
              "source": "android"
            },
            "destination": "https://n8n.mangomorado.com/webhook/calendar",
            "date_time": "2025-04-11T18:15:03.577Z",
            "sender": "573135629228@s.whatsapp.net",
            "server_url": "https://evolution.mangomorado.com",
            "apikey": "01E69C6AAD29-4041-BC9C-B93E31B5146F"
          },
          "webhookUrl": "https://n8n.mangomorado.com/webhook/calendar",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Banlist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respuesta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store1": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector store tool",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Vector store tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Vector store tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "DescargaImg",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "DescargaImg",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "DescargaAudio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "DescargaDocumento",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Formato No Soportado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Guardar_Mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DescargaImg": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DescargaAudio": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DescargaDocumento": {
      "main": [
        [
          {
            "node": "Convert to File2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File2": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Guardar_Mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AGENDAR TURNO": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Registrar Usuario": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Banlist": {
      "main": [
        [
          {
            "node": "Normalize",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IA Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Normalize": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Guardar_Mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Guardar_Mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Guardar_Mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat_Input": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Guardar_Mensaje": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Recuperar_Mensajes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recuperar_Mensajes": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Unir_Mensajes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Unir_Mensajes": {
      "main": [
        [
          {
            "node": "Chat_Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respuesta": {
      "main": [
        [
          {
            "node": "Limpiar_Buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ConsultarBD": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Actualizar Usuario": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Bogota",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "fa0c8e65-8a84-45e4-b56d-735ceb385f72",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "492216dba7ead6f870ef4169d10664ed44bcfc662cf5e8e4907018d95ca96a66"
  },
  "id": "c7YfsyCLRr2sTXLw",
  "tags": [
    {
      "createdAt": "2025-04-08T03:26:20.505Z",
      "updatedAt": "2025-04-08T03:26:20.505Z",
      "id": "6DZhrxpTyzDPm6sI",
      "name": "Agenda"
    },
    {
      "createdAt": "2025-03-25T21:31:30.282Z",
      "updatedAt": "2025-03-25T21:31:30.282Z",
      "id": "Nx7TdHXx7BAlOiRv",
      "name": "EvolutionAPI"
    }
  ]
}