{
  "name": "‚úÖ Mundo Animal | Conversacional",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.server_url }}/message/sendText/{{ $('Webhook').item.json.body.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid }}"
            },
            {
              "name": "text",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3200,
        800
      ],
      "id": "fde5180f-8513-4223-baaf-d7c41f2d077c",
      "name": "Respuesta"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2840,
        980
      ],
      "id": "de4375e9-4ae9-4459-9fcc-c23eac5bdce8",
      "name": "IA Model",
      "credentials": {
        "openAiApi": {
          "id": "lXYqrNQbtsJxj5Dt",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=El usuario dice: {{ $json.message }}\nEl numero es: {{ $json.context_id }}\nEl nombre \"registrado como PushName en WahtsApp\"es: {{ $('Webhook').item.json.body.data.pushName }}\n\n**Fecha y hora actual:** `{{ $now.setZone('America/Bogota').format('yyyy-MM-dd HH:mm:ss') }}`\nEl d√≠a de la semana es: `{{ $now.setZone('America/Bogota').weekdayLong }}`",
        "options": {
          "systemMessage": "=# Rol\nAsistente virtual de Mundo Animal con personalidad amigable, emp√°tica y profesional. Funciones principales:\n- Informaci√≥n sobre servicios y precios en cl√≠nica y domicilio\n- Educaci√≥n b√°sica sobre cuidado de mascotas\n- Gesti√≥n de consultas sobre certificados de viaje\n- Derivaci√≥n adecuada a humanos cuando sea necesario\n\nTu funci√≥n es clave para facilitar un servicio excepcional en:\n- La provisi√≥n de informaci√≥n detallada del negocio.\n\n## ‚ö† *REGLAS ESTRICTAS*\n- ‚ùå NO ofrecer promociones/descuentos\n- ‚ùå NO recomendar medicamentos espec√≠ficos\n- ‚úÖ Usar emojis relevantes\n- ‚úÖ Mantener respuestas breves (1-3 frases)\n- ‚úÖ Siempre responde en espa√±ol\n- ‚úÖ Siempre especificar que los precios son en COP\n- ‚úÖ Solo atendemos Perros y Gatos\n- ‚úÖ Direcci√≥n de Mundo Animal (latitud y longitud): 9.306346138108434, -75.3898501288357\n- ‚úÖ Para pedidos de domicilio, responder siempre con \"Dame un momento\" y si el usuario insiste, repetir el mismo mensaje\n- ‚úÖ Para solicitudes de citas, responder siempre con \"Dame un momento\" y si el usuario insiste, repetir el mismo mensaje\n- ‚úÖ Las citas est√©ticas solo se pueden agendar en horario de 8:15 AM a 12 PM\n- ‚úÖ Para servicios est√©ticos, NUNCA dar precios fijos, solo rangos aproximados, explicando que: \"Los servicios de est√©tica no tienen una tarifa fija establecida, depender√° del tama√±o del paciente, estado del pelaje, edad, condici√≥n sanitaria, entre otros. Por todo lo anterior la confirmaci√≥n del valor del servicio se realizar√° en el momento de hacer la recepci√≥n del paciente en nuestras instalaciones\"\n- ‚úÖ Al finalizar cada conversaci√≥n, enviar el mensaje de cierre con los emojis: üê∂üòä\n- ‚úÖ Cuando recibas un mensaje que inicie con \"EL CONTENIDO DE LA IMAGEN ES:\", interpreta el contenido descrito como si fuera una imagen enviada por el usuario y responde adecuadamente seg√∫n el contexto:\n   - Si muestra una mascota con s√≠ntomas: sugiere agendar una cita veterinaria\n   - Si muestra un documento o carnet de vacunaci√≥n: ayuda a interpretarlo y sugiere vacunas faltantes\n   - Si muestra una factura o recibo: valida la informaci√≥n y responde consultas relacionadas\n   - Si es una ubicaci√≥n o direcci√≥n: ofrece informaci√≥n sobre c√≥mo llegar a la cl√≠nica desde all√≠\n   - Si es una foto de medicamentos: explica informaci√≥n general sin recetar dosis espec√≠ficas\n\n## ‚ú® *INICIO DE CONVERSACI√ìN*\n\"¬°Hola! Soy MUNDI üêæ, tu asistente de Mundo Animal, en que te puedo ayudar:\n‚Ä¢ Servicios y precios\n‚Ä¢ Horarios\n‚Ä¢ Ubicaci√≥n\n‚Ä¢ Certificados de viaje\n‚Ä¢ Domicilios veterinarios\n‚Ä¢ Informaci√≥n general\"\n \n---\n\n# Instrucci√≥n\n\nProporciona respuestas informativas basadas en los datos del negocio.\n\n---\n\n# üß≠ Pasos\n\n## üîπ Inicio\n\nSaluda al cliente con amabilidad, mostrando total disposici√≥n para asistir en sus necesidades relacionadas con el negocio.\n\nEvita decir \"Hola\" o saludar nuevamente si en la conversaci√≥n ya lo has dicho otras veces.\n\n---\n\n## üîπ Identificaci√≥n del cliente:\n\nCuando recibas un mensaje de un usuario:\n1. Usa la herramienta ConsultarBD para verificar si el usuario existe en la base de datos.\n2. Si el usuario no existe (respuesta vac√≠a):\n   - Pres√©ntate y explica que necesitas algunos datos para registrarlo.\n   - Solicita al usuario su nombre, documento y direcci√≥n.\n   - Una vez obtenidos los datos, usa la herramienta Registrar Usuario para guardarlos.\n3. Si el usuario ya existe:\n   - Utiliza sus datos para personalizar la conversaci√≥n.\n   - Si el usuario indica que alg√∫n dato ha cambiado, actualiza usando Registrar Usuario.\n\nLos campos disponibles para almacenar informaci√≥n en la base de datos son:\n- telefono: {{ $json.from }}\n- nombre: nombre del cliente\n- documento: numero de documento\n- direccion: direcci√≥n del cliente\n- email: correo electronico\n- fecha_registro: {{ $now.setZone('America/Bogota')}}\n- ultima_actividad: {{ $now.setZone('America/Bogota')}}\n- mascotas: informaci√≥n de las mascotas del cliente estructurada como un array JSON. Ejemplo:\n \n  ```json\n  [\n    {\n      \"nombre\": \"Max\", \n      \"especie\": \"perro\",\n      \"raza\": \"Golden Retriever\",\n      \"edad\": \"3 a√±os\",\n      \"sexo\": \"macho\",\n      \"caracter√≠sticas\": \"manchas blancas en el pecho\",\n      \"historial\": \"vacunado en marzo 2025\"\n    }\n  ]\n  ```\n- notas: informaci√≥n importante de la consulta\n- estado: asigna uno de estos valores seg√∫n la interacci√≥n:\n  * \"activo\": Usuario que interact√∫a regularmente\n  * \"nuevo\": Usuario reci√©n registrado\n  * \"pendiente\": Usuario con informaci√≥n incompleta\n  * \"interesado\": Usuario que ha consultado servicios espec√≠ficos\n  * \"ausente\": Sin interacci√≥n en m√°s de 3 meses\n  * \"VIP\": Cliente frecuente o con casos especiales\n\n### Valores predeterminados para campos incompletos:\nCuando el usuario no proporciona ciertos datos, usa estos valores por defecto:\n- nombre: \"[Nombre de WhatsApp]\" (usando el PushName si est√° disponible)\n- documento: \"Pendiente\" (prioridad alta para completar)\n- direccion: \"No proporcionada\"\n- email: \"No proporcionado\"\n- mascotas: [] (array vac√≠o)\n- notas: \"Usuario registrado mediante WhatsApp el {{ $now.setZone('America/Bogota').format('yyyy-MM-dd') }}\"\n- estado: \"pendiente\"\n\n### Gesti√≥n de informaci√≥n parcial de mascotas:\nCuando el usuario menciona informaci√≥n incompleta sobre sus mascotas:\n1. Crea un objeto con los datos disponibles, dejando los campos faltantes con valores como \"No especificado\"\n2. Para campos cr√≠ticos como especie, asume \"perro\" o \"gato\" seg√∫n el contexto de la conversaci√≥n\n3. Estructura m√≠nima a mantener:\n```json\n{\n  \"nombre\": \"[Nombre mencionado o 'Mascota no identificada']\",\n  \"especie\": \"[perro/gato o 'No especificado']\",\n  \"edad\": \"[Edad mencionada o 'No especificada']\"\n}\n4. Actualiza el registro progresivamente cuando el usuario proporcione m√°s informaci√≥n\n5. Confirma los datos parciales con el usuario: \"Entiendo que tienes un [especie] llamado [nombre]. ¬øHay algo m√°s que quieras contarme sobre √©l/ella?\"\n\n## üîπ Acci√≥n a realizar\nAtiende las necesidades espec√≠ficas del cliente, que pueden incluir:\n\n- Consulta de servicios y precios: Proporciona informaci√≥n detallada sobre los servicios ofrecidos y sus tarifas.\n- Solicitud de informaci√≥n: Responde consultas sobre horarios, ubicaci√≥n, procedimientos y cuidados de mascotas.\n- Certificados de viaje: Informa sobre el proceso para obtener certificados de viaje para mascotas.\n- Registro en base de datos de MundoAnimal\n\n* Para cada interacci√≥n:\n\n- Identifica claramente la necesidad principal del cliente\n- Recopila toda la informaci√≥n necesaria para atender su solicitud\n- Utiliza las herramientas correspondientes para dar respuesta\n- Confirma con el cliente si su necesidad fue atendida satisfactoriamente\n- Ofrece informaci√≥n adicional relevante seg√∫n el contexto\n\n## üîπ Actualizaci√≥n de informaci√≥n del cliente:\nCuando detectes que un usuario existente necesita actualizar sus datos:\n\nUsa la herramienta Registrar Usuario para actualizar la informaci√≥n en la base de datos.\nEste proceso de actualizaci√≥n puede ser iniciado por:\n\nSolicitud expl√≠cita del cliente para cambiar sus datos\nDetecci√≥n de informaci√≥n nueva o contradictoria en la conversaci√≥n\nNecesidad de completar datos faltantes para un servicio espec√≠fico\n\nLos campos que se pueden actualizar son:\n\nnombre: nombre completo actualizado del cliente\ndocumento: n√∫mero de documento corregido o actualizado\ndireccion: nueva direcci√≥n del cliente\nemail: correo electr√≥nico actualizado\nultima_actividad: {{ $now.setZone('America/Bogota')}} (se actualiza autom√°ticamente)\nmascotas: informaci√≥n actualizada de las mascotas como array JSON, manteniendo el formato:\njson[\n  {\n    \"nombre\": \"Max\", \n    \"especie\": \"perro\",\n    \"raza\": \"Golden Retriever\",\n    \"edad\": \"3 a√±os\",\n    \"sexo\": \"macho\",\n    \"caracter√≠sticas\": \"manchas blancas en el pecho\",\n    \"historial\": \"vacunado en marzo 2025\"\n  }\n]\n\nnotas: informaci√≥n relevante adicional o actualizada\nestado: actualiza seg√∫n la situaci√≥n actual del cliente (activo, interesado, etc.)\n\nInstrucciones para la actualizaci√≥n:\n\nConfirma con el usuario la informaci√≥n que desea actualizar\nConserva los datos anteriores que no requieren cambios\nPara el campo \"mascotas\", incorpora la nueva informaci√≥n sin sobrescribir datos previos valiosos\nDespu√©s de actualizar, confirma verbalmente al usuario los cambios realizados\nActualiza el campo \"ultima_actividad\" con la fecha y hora actual\n\nEjemplo de respuesta despu√©s de actualizar: \"He actualizado tus datos, [nombre]. Tu direcci√≥n ha sido cambiada a [nueva direcci√≥n] y hemos registrado la informaci√≥n de tu nueva mascota, [nombre mascota]. ¬øHay algo m√°s que necesites modificar?\"\n\n---\n\n# üéØ Objetivo Final\n\nMejorar significativamente la **comunicaci√≥n y gesti√≥n de informaci√≥n**, proporcionando un proceso de atenci√≥n al cliente **fluido, informativo y eficiente** de inicio a fin.\n\n---\n\n# ‚ùó Limitaciones\n\nEste agente se enfoca √∫nicamente en:\n\n- Atender las necesidades de informaci√≥n de los clientes.\n- Responder consultas informativas de los clientes.\n\nSiempre manteniendo una atenci√≥n detallada en **las preferencias del cliente** y la **informaci√≥n espec√≠fica del negocio**.\n\n## üè• *TARIFAS EN CL√çNICA (2025)*\n\n### üíâ Vacunaci√≥n\n- Vanguard Plus 5: $45.000 COP\n- Vanguard Plus 5 L4: $50.000 COP\n- Vanguard Plus 5 L4 - CV: $60.000 COP\n- Bronchine CAe: $50.000 COP\n- Defensor 1: $30.000 COP\n- Felocell FeLV (gatos): $65.000 COP\n- Felocell 3: $65.000 COP\n\n### üíâ Esquema de Vacunaci√≥n para Perros\n1. Primera dosis: Vanguard Plus 5\n   - *Protege contra: Distemper (moquillo), Hepatitis, Parainfluenza y Parvovirus. Estas son enfermedades muy contagiosas que pueden ser mortales para tu mascota.*\n   \n2. A los 15 d√≠as: Vanguard Plus 5 L4\n   - *Refuerza la protecci√≥n anterior y a√±ade cobertura contra Leptospirosis, una enfermedad bacteriana que afecta a ri√±ones e h√≠gado y puede transmitirse a humanos.*\n   \n3. A los 15 d√≠as: Vanguard Plus 5 L4 - CV\n   - *Contin√∫a el refuerzo anterior y a√±ade protecci√≥n contra Coronavirus canino, que causa problemas digestivos severos especialmente en cachorros.*\n   \n4. A los 15 d√≠as: Bronchine CAe y Defensor 1\n   - *Bronchine \"Bordetella\": Protege contra la tos de las perreras, una enfermedad respiratoria muy contagiosa en lugares con muchos perros.*\n   - *Defensor: Es la vacuna antirr√°bica que protege contra la rabia, enfermedad mortal que afecta al sistema nervioso y puede transmitirse a humanos. Obligatoria por ley.*\n   \n5. Refuerzo anual: (Vanguard Plus 5 L4 - CV, Bronchine CAe y Defensor 1)\n   - *Mantiene activa la protecci√≥n de todas las vacunas anteriores. Es fundamental para la salud de tu mascota a largo plazo.*\n\n### üíâ Esquema de Vacunaci√≥n para Gatos\n1. Primera dosis: Felocell\n   - *Protege contra la leucemia viral, Panleucopenia felina (tambi√©n llamada \"moquillo de los gatos\"), una enfermedad muy contagiosa que afecta el sistema digestivo y puede ser mortal, especialmente en gatitos.*\n   \n2. A los 15 d√≠as: Felocell 3\n   - *Protecci√≥n contra Herpesvirus, Ampl√≠a la protecci√≥n contra Panleucopenia felina y Calicivirus, dos infecciones respiratorias comunes en gatos que causan s√≠ntomas similares a un resfriado severo, con secreci√≥n nasal, estornudos y √∫lceras en la boca.*\n   \n3. A los 15 d√≠as: Defensor 1\n   - *Es la vacuna antirr√°bica que protege contra la rabia, enfermedad mortal que afecta al sistema nervioso y puede transmitirse a humanos. Obligatoria por ley para gatos con acceso al exterior.*\n\n4. Refuerzo anual\n   - *Mantiene activa la protecci√≥n de todas las vacunas anteriores. Fundamental para mantener a tu gato sano y protegido.*\n\n### ü™± Desparasitaci√≥n y Control de Par√°sitos\n- Desparasitaci√≥n b√°sica cachorros: $7.000 COP\n- Desparasitaci√≥n b√°sica adultos: $15.000 COP\n- Dosis garrapaticida spray razas peque√±as: $18.000 COP\n- Dosis garrapaticida spray razas medianas: $25.000 COP\n- Dosis garrapaticida spray razas grandes: $30.000 COP\n\n### üê∂ Guarder√≠a\n- Guarder√≠a razas peque√±as (el propietario aporta la alimentaci√≥n): $60.000 COP\n- Guarder√≠a razas medianas (el propietario aporta la alimentaci√≥n): $70.000 COP\n- Guarder√≠a razas grandes (el propietario aporta la alimentaci√≥n): $80.000 COP\n\n### ü©∫ Procedimientos M√©dicos\n- Consulta general: $60.000 COP\n- Ecograf√≠a: $90.000 COP\n\n### üè• Hospitalizaci√≥n\n- Hospitalizaci√≥n simple (valor por d√≠a solo del servicio sin medicamentos): $120.000 COP\n- Hospitalizaci√≥n completa (valor por d√≠a incluyendo servicios y medicamentos): $220.000 COP\n\n### üêæ Cirug√≠as\n- Orquiectom√≠a (castraci√≥n) gato (HG-CX-Tratamiento): $120.000 COP\n- OVH felina (HG-CX-Tratamiento): $160.000 COP\n- OVH razas peque√±as canina: $270.000 COP\n- OVH razas medianas canina: $350.000 COP\n- OVH razas grandes canina: Seg√∫n peso\n- Orquiectom√≠a (castraci√≥n) razas peque√±as canino: $170.000 COP\n- Orquiectom√≠a (castraci√≥n) razas medianas canino: $230.000 COP\n- Orquiectom√≠a (castraci√≥n) razas grandes canino: Seg√∫n peso\n- Drenaje otohematoma razas peque√±as (unilateral): $200.000 COP\n- Drenaje otohematoma razas medianas (unilateral): $230.000 COP\n- Drenaje otohematoma razas grandes (unilateral): $270.000 COP\n\n### ü¶∑ Odontolog√≠a\n- Profilaxis dental razas peque√±as: $180.000 COP\n- Profilaxis dental razas medianas: $230.000 COP\n- Profilaxis dental razas grandes: $270.000 COP\n\n### üß™ An√°lisis Cl√≠nicos\n- Hemograma + Qu√≠mica sangu√≠nea: $140.000 COP\n- Hemograma: $40.000 COP\n- Parcial de orina (con sondeo sin sedaci√≥n): $45.000 COP\n- Parcial de orina (sin sondeo - traen la muestra): $20.000 COP\n- Coprol√≥gico: $20.000 COP\n- KOH - Raspado de piel - Citolog√≠a - Tricograma: $90.000 COP\n- Citolog√≠a: $70.000 COP\n- Citolog√≠a - Cultivo y antibiograma (muestra de o√≠dos o de alguna otra secreci√≥n): $150.000 COP\n- Ecograf√≠a: $90.000 COP\n\n### üíâ Tratamientos\n- Ozonoterapia para todas las razas y tama√±os (sin servicio de est√©tica): $45.000 COP\n- Ozonoterapia a partir de la segunda sesi√≥n (no incluye est√©tica): $40.000 COP\n\n### ‚ö±Ô∏è Cremaci√≥n\n- Cremaci√≥n colectiva razas peque√±as (sin devolver cenizas, solo certificado): $250.000 COP\n\n### üßº Ba√±o y Est√©tica\n- BA√ëOS RAZAS PEQUE√ëAS PELO CORTO (Pinscher, Beagle < 6 MESES): $38.000 COP\n- BA√ëOS RAZAS MEDIANAS PELO CORTO (Beagle): $50.000 COP\n- BA√ëO BLOWER RAZAS PEQUE√ëAS - MEDIANAS PELO LARGO (Yorki, French Poodle, Schnauzer, Shih tzu, Maltes): $44.000-$55.000 COP\n- BA√ëOS RAZAS GRANDES PELO CORTO (Labrador, Golden, Siberiano de poco pelo): $66.000-$72.000 COP\n- BA√ëOS RAZAS GRANDES PELO MEDIO (Labrador, Golden, Siberiano): $77.000-$94.000 COP\n- BA√ëOS RAZAS GRANDES PELO LARGO (Siberiano, Chow Chow): $99.000-$120.000 COP\n- BA√ëOS GATOS: $66.000 COP\n- PELUQUERIA ESTANDAR RAZAS MEDIANAS (French Poodle, Schnauzer, Coker): $44.000-$55.000 COP\n- PELUQUERIAS RAZAS GRANDES PELO LARGO (Siberiano, Chow Chow): $110.000 COP (PUEDE VARIAR)\n\n## üè† *SERVICIOS A DOMICILIO (Mundo Animal en Casa 2025)*\n\n### üíâ Vacunaci√≥n\n- Vanguard Plus 5: $50.000 COP\n- Bronchine CAe: $55.000 COP\n- Felocell FeLV (gatos): $70.000 COP\n\n### ü©∫ Procedimientos M√©dicos\n- Consulta general: $70.000 COP\n- Hemograma: $45.000 COP\n- Ecograf√≠a: $120.000 COP\n\n### üè• Hospitalizaci√≥n\n- Domiciliaria/d√≠a: $100.000 COP (incluye 2 visitas + medicamentos)\n\n### üêæ Cirug√≠as\n- Castraci√≥n gato: $150.000 COP\n- OVH felina: $190.000 COP\n- OVH canina: $350.000-$450.000 COP (seg√∫n tama√±o)\n\n### ‚úÇ Cuidados B√°sicos\n- Corte de u√±as: $15.000-$30.000 COP\n- Desinfecci√≥n de o√≠dos: $15.000-$55.000 COP\n- Desparasitaci√≥n: $10.000-$20.000 COP\n\n### üßº Ba√±o y Est√©tica a Domicilio\n- BA√ëOS RAZAS PEQUE√ëAS PELO CORTO: $38.000 COP + $30.000 ADICIONALES CON HIDRATACION Y RELAJACION CAPILAR √í AROMATERAPIA U OZONOTERAPIA \n- BA√ëOS RAZAS MEDIANAS PELO CORTO: $50.000 COP + $30.000 ADICIONALES CON HIDRATACION Y RELAJACION CAPILAR √í AROMATERAPIA U OZONOTERAPIA \n- BA√ëO BLOWER RAZAS PEQUE√ëAS - MEDIANAS PELO LARGO: $44.000-$55.000 COP + $30.000 ADICIONALES CON HIDRATACION Y RELAJACION CAPILAR √í AROMATERAPIA U OZONOTERAPIA \n- BA√ëOS RAZAS GRANDES PELO CORTO: $66.000-$72.000 COP + $30.000 ADICIONALES CON HIDRATACION Y RELAJACION CAPILAR √í AROMATERAPIA U OZONOTERAPIA \n- BA√ëOS RAZAS GRANDES PELO MEDIO: $77.000-$94.000 COP + $30.000 ADICIONALES CON HIDRATACION Y RELAJACION CAPILAR √í AROMATERAPIA U OZONOTERAPIA \n- BA√ëOS RAZAS GRANDES PELO LARGO: $99.000-$120.000 COP + $30.000 ADICIONALES CON HIDRATACION Y RELAJACION CAPILAR √í AROMATERAPIA U OZONOTERAPIA \n- BA√ëOS GATOS: $66.000 COP + $30.000 ADICIONALES CON HIDRATACION Y RELAJACION CAPILAR √í AROMATERAPIA U OZONOTERAPIA \n- PELUQUERIA ESTANDAR RAZAS MEDIANAS: $44.000-$55.000 COP + $30.000 ADICIONALES CON HIDRATACION Y RELAJACION CAPILAR √í AROMATERAPIA U OZONOTERAPIA \n- PELUQUERIAS RAZAS GRANDES PELO LARGO: $110.000 COP + $30.000 ADICIONALES CON HIDRATACION Y RELAJACION CAPILAR √í AROMATERAPIA U OZONOTERAPIA  (PUEDE VARIAR)\n\n## ‚ùì *PREGUNTAS FRECUENTES*\n\n### üêæ Sobre Ba√±os y Est√©tica\n- **¬øCu√°nto tiempo toma el ba√±o?**\n  Eso depende de cuantas mascotas tenemos en lista de espera. Generalmente dura m√°s de una hora. Te escribimos o llamamos cuando est√© listo.\n\n## üìç *UBICACI√ìN Y CONTACTO*\n- Direcci√≥n cl√≠nica: Calle 19 #26-25\n- Horario general: 8AM-6PM\n- Horario vacunaci√≥n: 8AM-12PM / 2PM-5PM\n- Horario citas est√©ticas: 8:15AM-12PM\n- Domicilios: Lunes a S√°bado 7AM-5PM\n- Emergencias 24h: 3013710366\n- WhatsApp citas: +57 320568913"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        2860,
        800
      ],
      "id": "4a1c2130-188d-4bf9-a3b0-8fb53bac6c7a",
      "name": "Mundibot"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        2960,
        980
      ],
      "id": "c0640c87-0c7a-4eab-8de9-e62e1a333732",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "6oB8WaRLlio9tDTl",
          "name": "PostgresPortainer"
        }
      }
    },
    {
      "parameters": {},
      "id": "450a9e32-9382-4a73-8f86-09ce8ac2941e",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2080,
        1160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Function: Compute waitSeconds\nconst wordCount = $input.first().json.content.split(' ').filter(w=>w).length;\nreturn [{ json: { \n  context_id: $('Webhook').first().json.body.data.key.remoteJid,\n  message: $('Webhook').first().json.body.data.message.conversation,\n  waitSeconds: wordCount < 5 ? 20 : 15,\n  timestamp: $input.first().json.timestamp\n}}];\n"
      },
      "id": "987aec04-d1b3-419d-b9a0-32befec59afa",
      "name": "get wait seconds",
      "type": "n8n-nodes-base.code",
      "position": [
        280,
        860
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=last_seen:{{ $json.context_id}}",
        "value": "={{$now.toMillis()}}",
        "keyType": "string",
        "expire": true,
        "ttl": "={{ $json.waitSeconds + 60 }}"
      },
      "id": "47cfa67d-c2ef-4654-8341-8abe1b16b420",
      "name": "Set last_seen",
      "type": "n8n-nodes-base.redis",
      "position": [
        660,
        700
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "i4ZpaERVB1p6PKpH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "waiting_reply",
        "key": "=waiting_reply:{{$json.context_id}}",
        "options": {}
      },
      "id": "69a169f6-69bb-4de5-89eb-921127988e20",
      "name": "Get waiting_reply",
      "type": "n8n-nodes-base.redis",
      "position": [
        660,
        1060
      ],
      "typeVersion": 1,
      "credentials": {
        "redis": {
          "id": "i4ZpaERVB1p6PKpH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7ff99444-753d-4ef7-865c-7115761526b8",
              "name": "waiting_reply",
              "type": "string",
              "value": "={{ $json.waiting_reply }}"
            },
            {
              "id": "58ad6981-c35a-4dd6-b1cd-7c446b85e738",
              "name": "context_id",
              "type": "string",
              "value": "={{ $('get wait seconds').item.json.context_id }}"
            },
            {
              "id": "bd0535a2-be03-436b-8a2e-222c3e26fd04",
              "name": "message",
              "type": "string",
              "value": "={{ $('get wait seconds').item.json.message }}"
            },
            {
              "id": "2f583f32-f231-4407-b773-c08b38d464f0",
              "name": "=waitSeconds",
              "type": "number",
              "value": "={{ $('get wait seconds').item.json.waitSeconds }}"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "1af198cd-4eec-4f8a-81c7-8b4a3f25eace",
      "name": "Mod input",
      "type": "n8n-nodes-base.set",
      "position": [
        820,
        1060
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "8136ea21-d798-41fd-81ed-5c0e7fda73c5",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{ $json.waiting_reply != null}}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "65d521c5-c73c-4098-9eb5-a5d93e0dc147",
      "name": "waiting_reply?",
      "type": "n8n-nodes-base.if",
      "position": [
        1000,
        1060
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=waiting_reply:{{ $json.context_id }}",
        "value": "true",
        "expire": true,
        "ttl": "={{ $json.waitSeconds }}"
      },
      "id": "fb287471-13ef-4070-9f65-c77dc797d4b9",
      "name": "Set waiting_reply",
      "type": "n8n-nodes-base.redis",
      "position": [
        1200,
        1080
      ],
      "typeVersion": 1,
      "credentials": {
        "redis": {
          "id": "i4ZpaERVB1p6PKpH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "buffer",
        "key": "=buffer_in:{{ $('get wait seconds').item.json.context_id }}",
        "options": {}
      },
      "id": "ddaf8bef-f567-48a8-a496-27552dcc82f2",
      "name": "Get buffer",
      "type": "n8n-nodes-base.redis",
      "position": [
        2080,
        960
      ],
      "typeVersion": 1,
      "credentials": {
        "redis": {
          "id": "i4ZpaERVB1p6PKpH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=buffer_in:{{ $('WaitSeconds').item.json.context_id }}"
      },
      "id": "e697a87d-5c8f-4086-8397-a6a8d2c1ab60",
      "name": "Delete buffer_in",
      "type": "n8n-nodes-base.redis",
      "position": [
        2620,
        960
      ],
      "typeVersion": 1,
      "credentials": {
        "redis": {
          "id": "i4ZpaERVB1p6PKpH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=waiting_reply:{{ $('WaitSeconds').item.json.context_id }}"
      },
      "id": "633e22d7-45f6-4ceb-852d-c4c28c3c306c",
      "name": "Delete waiting_reply",
      "type": "n8n-nodes-base.redis",
      "position": [
        2620,
        1120
      ],
      "typeVersion": 1,
      "credentials": {
        "redis": {
          "id": "i4ZpaERVB1p6PKpH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "amount": "={{ $json.waitSeconds }} "
      },
      "id": "e53868e8-f7c7-4b64-b19b-8d86a80e8f12",
      "name": "WaitSeconds",
      "type": "n8n-nodes-base.wait",
      "position": [
        1360,
        1080
      ],
      "webhookId": "c218d471-2f0f-4bd7-87d1-5431ac602211",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "operation": "push",
        "list": "=buffer_in:{{$json.context_id}}",
        "messageData": "={\"text\": \"{{ $json.message || $('Set Multimedia Fields').item.json.content }}\", \"timestamp\": \"{{ $json.timestamp }}\"}"
      },
      "id": "563d3158-d454-423e-9381-4c1c72d12202",
      "name": "Buffer messages",
      "type": "n8n-nodes-base.redis",
      "position": [
        440,
        860
      ],
      "typeVersion": 1,
      "credentials": {
        "redis": {
          "id": "i4ZpaERVB1p6PKpH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "incr",
        "key": "=buffer_count:{{$json.context_id}}",
        "expire": "={{$json.waitSeconds + 60}}"
      },
      "id": "6738333d-f66c-4fe9-9be1-fc553931e7cf",
      "name": "Set buffer_count increment",
      "type": "n8n-nodes-base.redis",
      "position": [
        660,
        860
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "i4ZpaERVB1p6PKpH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "last_seen",
        "key": "=last_seen:{{$json.context_id}}",
        "options": {}
      },
      "id": "554a17b4-d3b2-4dc4-813e-56211442fd4c",
      "name": "Get last_seen",
      "type": "n8n-nodes-base.redis",
      "position": [
        1520,
        1080
      ],
      "typeVersion": 1,
      "credentials": {
        "redis": {
          "id": "i4ZpaERVB1p6PKpH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "count",
        "key": "=buffer_count:{{ $('Mod input').item.json.context_id }}",
        "options": {}
      },
      "id": "ad4b26b0-3199-44c3-97a2-b9e8b79ca36d",
      "name": "Get buffer_count",
      "type": "n8n-nodes-base.redis",
      "position": [
        1680,
        1080
      ],
      "typeVersion": 1,
      "credentials": {
        "redis": {
          "id": "i4ZpaERVB1p6PKpH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e8d80ab4-74a2-4c30-8500-8dddc5802eec",
              "name": "message",
              "type": "string",
              "value": "={{ $json.mensajes }}"
            },
            {
              "id": "7e7fcee4-14b3-4393-b516-b07a53c018b3",
              "name": "context_id",
              "type": "string",
              "value": "={{ $json.message.chat_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e55177ef-b9ab-483c-92b0-33acc4319b53",
      "name": "Map ouput",
      "type": "n8n-nodes-base.set",
      "position": [
        2620,
        800
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "0f294c51-0629-4ae1-a009-68c2f5fd30b5",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{$json.count != null && Number($json.count) >= 1}}",
              "rightValue": ""
            },
            {
              "id": "1626238d-fb00-4ce8-89df-a40a4f29f52a",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{$('Get last_seen').item.json.last_seen != null}}",
              "rightValue": ""
            },
            {
              "id": "df819099-1f6e-4bee-a017-32b729c836a3",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{($now.toMillis() - $('Get last_seen').item.json.last_seen) >= $('Mod input').item.json.waitSeconds * 1000}}",
              "rightValue": ""
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "71371051-40fd-4c57-8b17-439561e746cd",
      "name": "Check Inactivity + Count",
      "type": "n8n-nodes-base.if",
      "position": [
        1860,
        1080
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=buffer_count:{{ $('WaitSeconds').item.json.context_id }}"
      },
      "id": "ce30ff4a-dce9-4544-8a7d-437550cd5e1e",
      "name": "Delete waiting_reply1",
      "type": "n8n-nodes-base.redis",
      "position": [
        2620,
        1280
      ],
      "typeVersion": 1,
      "credentials": {
        "redis": {
          "id": "i4ZpaERVB1p6PKpH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {},
      "id": "a8b2c3f4-af92-4c5b-af7c-d285d305d6d1",
      "name": "No Operation, do nothing2",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1200,
        860
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "amount": "={{ Math.max(0, Math.ceil(( $('Mod input').item.json.waitSeconds * 1000 - ($now.toMillis() - $('Get last_seen').item.json.last_seen)) / 1000)) }}"
      },
      "id": "5a3d0935-bd1d-41a1-9510-44809838f7e8",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "position": [
        2280,
        1160
      ],
      "webhookId": "b8e2e214-f82b-49c2-96e2-91e093137857",
      "typeVersion": 1.1
    },
    {
      "parameters": {},
      "id": "188d4da9-570d-4200-b5bc-03df2d2a101a",
      "name": "No Operation, do nothing3",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2860,
        1120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "buffer",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1860,
        860
      ],
      "id": "0c960393-57c7-43e2-9cfe-ca323d47c737",
      "name": "Webhook",
      "webhookId": "1ea9a5a0-b675-4134-a8e0-74ded3ea552c"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c12e5c6-39f3-47d0-a76d-1f4a09721097",
              "name": "instance.server_url",
              "value": "={{ $('Webhook').item.json.body.server_url }}",
              "type": "string"
            },
            {
              "id": "c3dd8ebb-a497-41a0-b4ba-8fe81bc86a19",
              "name": "instance.name",
              "value": "={{ $('Webhook').item.json.body.instance }}",
              "type": "string"
            },
            {
              "id": "a588e0d6-e0f1-460e-b95d-f47b8c010f53",
              "name": "instance.apikey",
              "value": "={{ $('Webhook').item.json.body.apikey }}",
              "type": "string"
            },
            {
              "id": "0911dc7a-b010-4739-a32f-175501a564cd",
              "name": "message.message_id",
              "value": "={{ $('Webhook').item.json.body.data.key.id }}",
              "type": "string"
            },
            {
              "id": "b82c178e-28b5-4baf-84ce-61c8e65e4ebd",
              "name": "message.chat_id",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "958e97ce-3b9b-4584-9802-5c8c3bc2a728",
              "name": "message.content_Type",
              "value": "={{ $('Webhook').item.json.body.data.messageType }}",
              "type": "string"
            },
            {
              "id": "d0004926-731e-4eeb-9adc-b2f6521ac867",
              "name": "message.content",
              "value": "={{ $('Webhook').item.json.body.data.message.conversation }}",
              "type": "string"
            },
            {
              "id": "4ae42240-d806-4112-8318-3fca2859c0b5",
              "name": "message.timestamp",
              "value": "={{ $('Webhook').item.json.body.date_time }}",
              "type": "string"
            },
            {
              "id": "d7ba3042-5768-4ab8-895f-7a703321798c",
              "name": "user.name",
              "value": "={{ $('Webhook').item.json.body.data.pushName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -960,
        860
      ],
      "id": "ee90ecd9-8df4-43d5-a229-5e06efab6908",
      "name": "Normalize"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "47c72408-0108-486f-9b4e-3af71e182096",
              "name": "mensajes",
              "value": "={{ $json.buffer.reverse().join(\"\\n\") }}",
              "type": "string"
            },
            {
              "id": "f85bf6e7-ae2a-42ec-a7b7-46e601af39ef",
              "name": "message.chat_id",
              "value": "={{ $('WaitSeconds').item.json.context_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2280,
        960
      ],
      "id": "f5a4b7a8-e613-4028-9fa2-1ab915e3f2f6",
      "name": "Unir_Mensajes"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4ccc0334-30c7-4a6b-885e-9efcc3bdc80d",
              "leftValue": "={{ $json.body.data.key.fromMe }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1680,
        860
      ],
      "id": "91c13051-8ce5-4ec8-b6b9-9ebded3569e3",
      "name": "ResponderUnoMismo"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "humanAssist",
        "key": "=humanAssist:{{ $json.body.data.key.remoteJid }}",
        "options": {}
      },
      "id": "b1011503-f644-42b2-9803-c28f44342244",
      "name": "Get HumanFlag",
      "type": "n8n-nodes-base.redis",
      "position": [
        -1320,
        860
      ],
      "typeVersion": 1,
      "credentials": {
        "redis": {
          "id": "i4ZpaERVB1p6PKpH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=humanAssist:{{ $json.body.data.key.remoteJid }}",
        "value": "=true",
        "expire": true,
        "ttl": "={{ 2 * 60 }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1560,
        1060
      ],
      "id": "10275edb-5a4d-4bc1-98d5-e33509d338fe",
      "name": "Set HumanFlag",
      "credentials": {
        "redis": {
          "id": "i4ZpaERVB1p6PKpH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1cce81fd-f043-49e6-a98b-472c3b56a8d9",
              "leftValue": "={{ $json.humanAssist }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1160,
        860
      ],
      "id": "1d1c74af-1dbc-4e34-933b-69e74c59dae5",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -960,
        1060
      ],
      "id": "e7d91f66-9355-4722-8361-9d2d5af84f2e",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1320,
        1060
      ],
      "id": "a0ae11ca-078c-4668-b185-35ad7bbde625",
      "name": "No Operation, do nothing4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0c8134a9-fd72-4df1-9711-360a9e323477",
              "leftValue": "={{ $json.body.data.key.remoteJid }}",
              "rightValue": "numero a banear",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1500,
        860
      ],
      "id": "96563f16-272d-4f34-9867-6cf19e6bc4d0",
      "name": "Banlist"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.content_Type }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "082de8ea-d004-4da5-bdc8-6e670afa16ba"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0662a5d9-1f5b-4079-b302-60209fa1e8b0",
                    "leftValue": "={{ $json.message.content_Type }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f7903fc0-dc6d-4243-b4f9-07967d7d84dc",
                    "leftValue": "={{ $json.message.content_Type }}",
                    "rightValue": "stickerMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Sticker"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2f61b8da-8de2-463e-9d6b-58c04ab26991",
                    "leftValue": "={{ $json.message.content_Type }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c08ea041-7aec-4763-b409-95eb0b737afb",
                    "leftValue": "={{ $json.message.content_Type }}",
                    "rightValue": "documentMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Document"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d705951e-57e9-466b-b805-15157186f4cf",
                    "leftValue": "={{ $json.message.content_Type }}",
                    "rightValue": "locationMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Location"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "Otro"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -800,
        780
      ],
      "id": "bf279848-d979-42aa-9f23-3143aff1ccd4",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -240,
        860
      ],
      "id": "87b668ce-0dad-4bd2-a9b6-4714d4519465",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "lXYqrNQbtsJxj5Dt",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Normalize').item.json.instance.server_url }}/chat/getBase64FromMediaMessage/{{ $('Normalize').item.json.instance.name }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Normalize').item.json.instance.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $json.message.message_id }}"
            },
            {
              "name": "ConvertToMp4",
              "value": "={{Boolean(false)}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -560,
        700
      ],
      "id": "b0f8d5c8-be6e-4e08-a5b1-160381f1c0f2",
      "name": "DescargaImg"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "=El usuario dijo esto:  {{ $('DescargaImg').item.json.caption }}\nSobre esta imagen.\n\nSi no dijo nada descr√≠bela, si ves texto, transcr√≠bela, ser√° importante para pr√≥ximas consultas,\n\nInicia diciendo \"EL CONTENIDO DE LA IMAGEN ES:\"\nTermina diciendo \"EL USUARIO ESCRIBI√ì ESTO: {{ $('DescargaImg').item.json.caption }}\"",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -240,
        700
      ],
      "id": "7f490f13-056b-42e1-b853-12f950ddd937",
      "name": "OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "lXYqrNQbtsJxj5Dt",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -240,
        1020
      ],
      "id": "311e46cc-fc61-40e2-9721-0589a5169738",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -400,
        700
      ],
      "id": "7c881b74-bbbf-4bb5-99a7-54c2beebfb3b",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -400,
        860
      ],
      "id": "705bc05d-bbd2-450c-a156-582d426dc7c8",
      "name": "Convert to File1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Normalize').item.json.instance.server_url }}/chat/getBase64FromMediaMessage/{{ $('Normalize').item.json.instance.name }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Normalize').item.json.instance.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $json.message.message_id }}"
            },
            {
              "name": "ConvertToMp4",
              "value": "={{Boolean(false)}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -560,
        860
      ],
      "id": "f7a06f9d-02ba-4d66-bcb7-ba6d4d7ab3ec",
      "name": "DescargaAudio"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Normalize').item.json.instance.server_url }}/chat/getBase64FromMediaMessage/{{ $('Normalize').item.json.instance.name }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Normalize').item.json.instance.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $json.message_id }}"
            },
            {
              "name": "ConvertToMp4",
              "value": "={{Boolean(false)}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -560,
        1020
      ],
      "id": "f48e1d3b-19d7-42ce-a2f8-f969511c6e7e",
      "name": "DescargaDocumento"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -400,
        1020
      ],
      "id": "c15949da-acb6-4a7e-856d-9bcef6cb4ba7",
      "name": "Convert to File2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.server_url }}/message/sendText/{{ $('Webhook').item.json.body.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid }}"
            },
            {
              "name": "text",
              "value": "Lo siento, no puedo comprender,  podr√≠as escribirlo?"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -660,
        1240
      ],
      "id": "ec1bfc9e-bd4e-48f6-a3f1-54a40ec814d3",
      "name": "Formato No Soportado"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "86b247a9-ddb6-4609-ada4-f51fb0f6153a",
              "name": "message.chat_id",
              "value": "={{ $('Switch').item.json.message.chat_id }}",
              "type": "string"
            },
            {
              "id": "ed24825e-26fc-41e8-ab05-6fd17a62060a",
              "name": "content",
              "value": "={{ $json.content }}",
              "type": "string"
            },
            {
              "id": "ba85520c-87d3-4b84-8c23-f760994c4ae7",
              "name": "timestamp",
              "value": "={{ $('Switch').item.json.message.timestamp }}",
              "type": "string"
            },
            {
              "id": "85b86f1b-a52c-4235-a64d-de983a11b4bd",
              "name": "caption",
              "value": "={{ $('DescargaImg').item.json.caption }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -80,
        700
      ],
      "id": "22f2ac15-59cd-4dcd-a24a-aa612b8eed13",
      "name": "Edit IMG Fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "437383dd-e428-4038-8e4d-dd74fbb2245d",
              "name": "message.chat_id",
              "value": "={{ $('Switch').item.json.message.chat_id }}",
              "type": "string"
            },
            {
              "id": "0a3ce474-4e50-4fd9-842b-0b47607df7dc",
              "name": "content",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "27cdb7df-12ad-4fad-9297-8688383b4cc6",
              "name": "timestamp",
              "value": "={{ $('Switch').item.json.message.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -80,
        860
      ],
      "id": "b1080e36-043d-47ed-b6da-8e6b06fe5d3a",
      "name": "Edit AUDIO Fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bad8c0f0-5f89-49f7-9f58-b497300a32d6",
              "name": "message.chat_id",
              "value": "={{ $json.message.chat_id }}",
              "type": "string"
            },
            {
              "id": "0a3ce474-4e50-4fd9-842b-0b47607df7dc",
              "name": "content",
              "value": "={{ $json.content.conversation }}",
              "type": "string"
            },
            {
              "id": "52b634a1-d0d0-4353-bac2-28959f1f20ba",
              "name": "timestamp",
              "value": "={{ $json.message.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -80,
        1020
      ],
      "id": "b3709b56-2f54-4434-b6da-222ce8aeb4d5",
      "name": "Edit Documents Fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7d6214bc-e917-475f-b7bc-76f12b75309c",
              "name": "message.chat_id",
              "value": "={{ $json.message.chat_id }}",
              "type": "string"
            },
            {
              "id": "0a3ce474-4e50-4fd9-842b-0b47607df7dc",
              "name": "content",
              "value": "={{ $json.message.content }}",
              "type": "string"
            },
            {
              "id": "a8cda8c7-82d2-4fce-abff-245034e7c8e7",
              "name": "timestamp",
              "value": "={{ $json.message.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -400,
        560
      ],
      "id": "a862349b-bbe0-495d-b37b-8aa9d91d6ac1",
      "name": "Edit TEXT Fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "196f27b8-7f25-4649-92e3-e45e2deb7197",
              "name": "message.chat_id",
              "value": "={{ $json.message.chat_id }}",
              "type": "string"
            },
            {
              "id": "7d9b7bef-a57e-44e6-8e90-37a08bdddff1",
              "name": "content",
              "value": "=La direcci√≥n que te envio es\n\nLatitud: {{ $('Banlist').item.json.body.data.message.locationMessage.degreesLatitude }}\n\nLongitud: {{ $('Banlist').item.json.body.data.message.locationMessage.degreesLongitude }}\n\nNombre: {{ $json.body.data.message.locationMessage.name }}\n\nDirecci√≥n: {{ $json.body.data.message.locationMessage.address }}\n\njpegThumbnail: {{ $('Webhook').item.json.body.data.message.locationMessage.jpegThumbnail }}\n\nContext-Info: {{ $json.body.data.contextInfo }}",
              "type": "string"
            },
            {
              "id": "f433b454-5f6c-4efd-99c9-c2b082025b7b",
              "name": "timestamp",
              "value": "={{ $json.message.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -400,
        1180
      ],
      "id": "c4f57fca-d6c2-4709-949a-6ec682f87498",
      "name": "Edit MAPS Fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7d6214bc-e917-475f-b7bc-76f12b75309c",
              "name": "message.chat_id",
              "value": "={{ $json.message.chat_id }}",
              "type": "string"
            },
            {
              "id": "0a3ce474-4e50-4fd9-842b-0b47607df7dc",
              "name": "content",
              "value": "={{ $json.content }}",
              "type": "string"
            },
            {
              "id": "a8cda8c7-82d2-4fce-abff-245034e7c8e7",
              "name": "timestamp",
              "value": "={{ $json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        120,
        860
      ],
      "id": "f68c4890-8a14-4134-9763-87b0a84bc9e3",
      "name": "Set Multimedia Fields"
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "connection": "upgrade",
            "host": "n8n.mangomorado.com",
            "x-real-ip": "172.17.0.1",
            "x-forwarded-for": "172.17.0.1",
            "x-forwarded-proto": "https",
            "content-length": "1672",
            "content-type": "application/json",
            "user-agent": "axios/1.7.9",
            "accept-encoding": "gzip, compress, deflate, br"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "messages.upsert",
            "instance": "Parrot",
            "data": {
              "key": {
                "remoteJid": "573217058135@s.whatsapp.net",
                "fromMe": false,
                "id": "55AC03429A0EC57C9ED62D2FED58824E"
              },
              "pushName": "Sergio Veloza",
              "status": "DELIVERY_ACK",
              "message": {
                "audioMessage": {
                  "url": "https://mmg.whatsapp.net/v/t62.7117-24/382954470_673114095325387_1166411825327804040_n.enc?ccb=11-4&oh=01_Q5Aa1QHBLTbLn7p4FVLD49fziTiWPb6eoLkOG6x7bvfqFF4YTQ&oe=6843229B&_nc_sid=5e03e0&mms3=true",
                  "mimetype": "audio/ogg; codecs=opus",
                  "fileSha256": "KwZ2bBKiA+Qzar3eBLqHnotslaOx8int3b8EeFY4Pm0=",
                  "fileLength": "6477",
                  "seconds": 2,
                  "ptt": true,
                  "mediaKey": "azT5DTn9ujcARgwYz3/k/lkSZt4rZrnQJ5Z8HrhOVqc=",
                  "fileEncSha256": "ddP4HjisXYRMjA8OpJBxbkuFRIHdCW5Vs2BAXlPx24E=",
                  "directPath": "/v/t62.7117-24/382954470_673114095325387_1166411825327804040_n.enc?ccb=11-4&oh=01_Q5Aa1QHBLTbLn7p4FVLD49fziTiWPb6eoLkOG6x7bvfqFF4YTQ&oe=6843229B&_nc_sid=5e03e0",
                  "mediaKeyTimestamp": "1746643828",
                  "waveform": "AAAAH0FKRUVJUFBKUVNJRUlAVlZXVVZXV1RGKjNRWFNHQUxWVllaLSlEVVNXW1hRUVVWUlFVU05ORTkxKhgAAA=="
                },
                "messageContextInfo": {
                  "deviceListMetadata": {
                    "senderKeyHash": "G8mpZt47p4OIUA==",
                    "senderTimestamp": "1745855949",
                    "recipientKeyHash": "QD0vXAXHvBhdRw==",
                    "recipientTimestamp": "1746199273"
                  },
                  "deviceListMetadataVersion": 2,
                  "messageSecret": "IL/lfEvyAadeqMINzH+uFETDG+3XmC6eQ3x5zDfHg1k="
                }
              },
              "contextInfo": null,
              "messageType": "audioMessage",
              "messageTimestamp": 1746643829,
              "instanceId": "76f9a55c-ad16-4046-8b9b-6441ccdf5c99",
              "source": "android"
            },
            "destination": "https://n8n.mangomorado.com/webhook/buffer",
            "date_time": "2025-05-07T15:50:30.316Z",
            "sender": "573135629228@s.whatsapp.net",
            "server_url": "https://evolution.mangomorado.com",
            "apikey": "B97556079A36-4AE3-B85A-7BBF9EC15B72"
          },
          "webhookUrl": "https://n8n.mangomorado.com/webhook/buffer",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "IA Model": {
      "ai_languageModel": [
        [
          {
            "node": "Mundibot",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Respuesta": {
      "main": [
        []
      ]
    },
    "Mundibot": {
      "main": [
        [
          {
            "node": "Respuesta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Mundibot",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get wait seconds": {
      "main": [
        [
          {
            "node": "Buffer messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set last_seen": {
      "main": [
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get waiting_reply": {
      "main": [
        [
          {
            "node": "Mod input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mod input": {
      "main": [
        [
          {
            "node": "waiting_reply?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "waiting_reply?": {
      "main": [
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set waiting_reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set waiting_reply": {
      "main": [
        [
          {
            "node": "WaitSeconds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get buffer": {
      "main": [
        [
          {
            "node": "Unir_Mensajes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete buffer_in": {
      "main": [
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete waiting_reply": {
      "main": [
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WaitSeconds": {
      "main": [
        [
          {
            "node": "Get last_seen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buffer messages": {
      "main": [
        [
          {
            "node": "Set buffer_count increment",
            "type": "main",
            "index": 0
          },
          {
            "node": "Set last_seen",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get waiting_reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set buffer_count increment": {
      "main": [
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get last_seen": {
      "main": [
        [
          {
            "node": "Get buffer_count",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get buffer_count": {
      "main": [
        [
          {
            "node": "Check Inactivity + Count",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Map ouput": {
      "main": [
        [
          {
            "node": "Mundibot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Inactivity + Count": {
      "main": [
        [
          {
            "node": "Get buffer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete waiting_reply1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Check Inactivity + Count",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "ResponderUnoMismo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Normalize": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Unir_Mensajes": {
      "main": [
        [
          {
            "node": "Delete buffer_in",
            "type": "main",
            "index": 0
          },
          {
            "node": "Delete waiting_reply",
            "type": "main",
            "index": 0
          },
          {
            "node": "Delete waiting_reply1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Map ouput",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ResponderUnoMismo": {
      "main": [
        [
          {
            "node": "Banlist",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set HumanFlag",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get HumanFlag": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Normalize",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Banlist": {
      "main": [
        [
          {
            "node": "Get HumanFlag",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit TEXT Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "DescargaImg",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "DescargaImg",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "DescargaAudio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "DescargaDocumento",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit MAPS Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Formato No Soportado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Edit AUDIO Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DescargaImg": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Edit IMG Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Edit Documents Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DescargaAudio": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DescargaDocumento": {
      "main": [
        [
          {
            "node": "Convert to File2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File2": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit IMG Fields": {
      "main": [
        [
          {
            "node": "Set Multimedia Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit AUDIO Fields": {
      "main": [
        [
          {
            "node": "Set Multimedia Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Documents Fields": {
      "main": [
        [
          {
            "node": "Set Multimedia Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit TEXT Fields": {
      "main": [
        [
          {
            "node": "get wait seconds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit MAPS Fields": {
      "main": [
        [
          {
            "node": "Set Multimedia Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Multimedia Fields": {
      "main": [
        [
          {
            "node": "get wait seconds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Bogota",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "eeaec5ff-088e-4d7e-abc8-3bda397ee6e5",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "492216dba7ead6f870ef4169d10664ed44bcfc662cf5e8e4907018d95ca96a66"
  },
  "id": "IQPd8PKMIrWaUw2s",
  "tags": [
    {
      "createdAt": "2025-04-08T03:26:20.505Z",
      "updatedAt": "2025-04-08T03:26:20.505Z",
      "id": "6DZhrxpTyzDPm6sI",
      "name": "Agenda"
    },
    {
      "createdAt": "2025-03-25T21:31:30.282Z",
      "updatedAt": "2025-03-25T21:31:30.282Z",
      "id": "Nx7TdHXx7BAlOiRv",
      "name": "EvolutionAPI"
    }
  ]
}