openapi: 3.0.0
info:
  title: API de Gestión de Citas - Mundo Animal
  description: API para gestionar citas y notas en el sistema de calendario de Mundo Animal
  version: 2.0.0
  contact:
    name: Soporte Técnico
    email: soporte@mundoanimal.com

servers:
  - url: http://localhost/Calendar/api
    description: Servidor de desarrollo
  - url: https://api.mundoanimal.com
    description: Servidor de producción

components:
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Token JWT obtenido del endpoint /token.php

  schemas:
    Appointment:
      type: object
      properties:
        id:
          type: integer
          description: ID único de la cita
        title:
          type: string
          description: Título de la cita
        description:
          type: string
          description: Descripción detallada de la cita
        start_time:
          type: string
          format: date-time
          description: Fecha y hora de inicio de la cita
        end_time:
          type: string
          format: date-time
          description: Fecha y hora de fin de la cita
        calendar_type:
          type: string
          enum: [estetico, veterinario, general]
          description: Tipo de calendario al que pertenece la cita
        all_day:
          type: boolean
          description: Indica si la cita ocupa todo el día
        user_id:
          type: integer
          description: ID del usuario asignado a la cita
        user:
          type: string
          description: Nombre del usuario asignado
        user_color:
          type: string
          description: Color personalizado del usuario en el calendario

    Note:
      type: object
      properties:
        id:
          type: integer
          description: ID único de la nota
        title:
          type: string
          description: Título de la nota
        content:
          type: string
          description: Contenido de la nota
        type:
          type: string
          enum: [nota, sugerencia, otro]
          description: Tipo de nota
        visibility:
          type: string
          enum: [solo_yo, todos]
          description: Visibilidad de la nota
        user_id:
          type: integer
          description: ID del usuario que creó la nota
        created_at:
          type: string
          format: date-time
          description: Fecha y hora de creación
        updated_at:
          type: string
          format: date-time
          description: Fecha y hora de última actualización

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Error al procesar la solicitud

    TokenResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Autenticación exitosa
        data:
          type: object
          properties:
            token:
              type: string
              description: Token JWT para autenticación
            expires_in:
              type: integer
              description: Tiempo de expiración en segundos
            user:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                email:
                  type: string
                role:
                  type: string

paths:
  /token.php:
    post:
      summary: Genera un token JWT
      description: Genera un token JWT para autenticación basado en credenciales de usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Token generado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /appointments.php:
    get:
      summary: Obtener eventos del calendario
      description: Retorna una lista de eventos (citas) para el período especificado
      security:
        - jwtAuth: []
      parameters:
        - name: start
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: Fecha de inicio del período
        - name: end
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: Fecha de fin del período
        - name: calendar_type
          in: query
          required: false
          schema:
            type: string
            enum: [estetico, veterinario, general]
          description: Tipo de calendario a filtrar
      responses:
        '200':
          description: Lista de eventos obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Eventos obtenidos correctamente
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Appointment'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Crear una nueva cita
      description: Crea una nueva cita en el calendario
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - start_time
                - end_time
              properties:
                title:
                  type: string
                  description: Título de la cita
                description:
                  type: string
                  description: Descripción de la cita
                start_time:
                  type: string
                  format: date-time
                  description: Fecha y hora de inicio
                end_time:
                  type: string
                  format: date-time
                  description: Fecha y hora de fin
                calendar_type:
                  type: string
                  enum: [estetico, veterinario, general]
                  description: Tipo de calendario
                all_day:
                  type: boolean
                  description: Indica si es evento de día completo
                user_id:
                  type: integer
                  description: ID del usuario asignado
      responses:
        '200':
          description: Cita creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Cita creada correctamente
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: ID de la cita creada
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
    put:
      summary: Actualizar una cita existente
      description: Actualiza una cita existente en el calendario
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - title
                - start_time
                - end_time
              properties:
                id:
                  type: integer
                  description: ID de la cita a actualizar
                title:
                  type: string
                  description: Título de la cita
                description:
                  type: string
                  description: Descripción de la cita
                start_time:
                  type: string
                  format: date-time
                  description: Fecha y hora de inicio
                end_time:
                  type: string
                  format: date-time
                  description: Fecha y hora de fin
                calendar_type:
                  type: string
                  enum: [estetico, veterinario, general]
                  description: Tipo de calendario
                all_day:
                  type: boolean
                  description: Indica si es evento de día completo
                user_id:
                  type: integer
                  description: ID del usuario asignado
      responses:
        '200':
          description: Cita actualizada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Cita actualizada correctamente
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
    delete:
      summary: Eliminar una cita
      description: Elimina una cita existente del calendario
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: query
          required: false
          schema:
            type: integer
          description: ID de la cita a eliminar
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ID de la cita a eliminar
      responses:
        '200':
          description: Cita eliminada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Cita eliminada correctamente
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /notes.php:
    get:
      summary: Obtener notas
      description: Obtiene una nota específica o todas las notas del usuario
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: query
          required: false
          schema:
            type: integer
          description: ID de la nota específica
      responses:
        '200':
          description: Notas obtenidas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Notas obtenidas correctamente
                  data:
                    type: object
                    properties:
                      notes:
                        type: array
                        items:
                          $ref: '#/components/schemas/Note'
                      note:
                        $ref: '#/components/schemas/Note'
                      can_edit:
                        type: boolean
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
    post:
      summary: Crear una nueva nota
      description: Crea una nueva nota en el sistema
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - content
              properties:
                title:
                  type: string
                  description: Título de la nota
                content:
                  type: string
                  description: Contenido de la nota
                type:
                  type: string
                  enum: [nota, sugerencia, otro]
                  description: Tipo de nota
                visibility:
                  type: string
                  enum: [solo_yo, todos]
                  description: Visibilidad de la nota
      responses:
        '200':
          description: Nota creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Nota creada correctamente
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: ID de la nota creada
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
    put:
      summary: Actualizar una nota existente
      description: Actualiza una nota existente en el sistema
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - title
                - content
              properties:
                id:
                  type: integer
                  description: ID de la nota a actualizar
                title:
                  type: string
                  description: Título de la nota
                content:
                  type: string
                  description: Contenido de la nota
                type:
                  type: string
                  enum: [nota, sugerencia, otro]
                  description: Tipo de nota
                visibility:
                  type: string
                  enum: [solo_yo, todos]
                  description: Visibilidad de la nota
      responses:
        '200':
          description: Nota actualizada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Nota actualizada correctamente
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Prohibido (no tienes permiso para editar)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
    delete:
      summary: Eliminar una nota
      description: Elimina una nota existente del sistema
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: query
          required: false
          schema:
            type: integer
          description: ID de la nota a eliminar
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ID de la nota a eliminar
      responses:
        '200':
          description: Nota eliminada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Nota eliminada correctamente
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Prohibido (no tienes permiso para eliminar)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /ping.php:
    get:
      summary: Verificar disponibilidad de la API
      description: Endpoint para verificar que la API esté funcionando
      responses:
        '200':
          description: Respuesta exitosa
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    example: pong
                  timestamp:
                    type: string
                    format: date-time 